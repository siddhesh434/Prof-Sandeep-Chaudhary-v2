<!DOCTYPE html>
<html lang="en">

<head>
  <meta charset="UTF-8" />
  <meta name="viewport" content="width=device-width, initial-scale=1.0" />
  <title>Research Publications Management</title>
  <script src="https://cdn.tailwindcss.com"></script>
  <link href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.0.0-beta3/css/all.min.css" rel="stylesheet" />
  <script>
    tailwind.config = {
      theme: {
        extend: {
          colors: {
            "brand-primary": "#3B82F6",
            "brand-secondary": "#10B981",
          },
        },
      },
    };
  </script>
  <style>
    .animate-fade-in-out {
      animation: fadeIn 0.3s ease-in;
    }
    .fade-out {
      animation: fadeOut 0.5s ease-out;
      opacity: 0;
    }
    @keyframes fadeIn {
      from { opacity: 0; transform: translateY(-20px); }
      to { opacity: 1; transform: translateY(0); }
    }
    @keyframes fadeOut {
      from { opacity: 1; }
      to { opacity: 0; }
    }
  </style>
</head>

<body class="bg-gray-100">
  <div class="flex h-screen overflow-hidden relative">
    <!-- Sidebar - hidden on mobile by default -->
    <aside id="sidebar"
      class="w-64 bg-blue-900 text-white shadow-lg transition-all duration-300 ease-in-out z-40 fixed inset-y-0 left-0 transform -translate-x-full md:translate-x-0 md:relative md:block">
      <div class="p-6 border-b border-blue-800">
        <h2 class="text-xl font-bold tracking-wide">Welcome, admin123!</h2>
        <!-- Close button for mobile -->
        <button id="close-sidebar" class="absolute top-4 right-4 text-white md:hidden">
          <i class="fas fa-times text-xl"></i>
        </button>
      </div>
      <nav class="mt-4">
        <ul>
          <li class="mb-1 px-2">
            <a href="/admin" class="flex items-center py-3 px-4 bg-blue-700 text-white rounded-md font-medium">
              <i class="fas fa-home mr-3"></i>
              <span>Dashboard</span>
            </a>
          </li>
          <li class="mb-1 px-2">
            <a href="/admin/control.html" class="flex items-center py-3 px-4 text-blue-100 hover:bg-blue-800 rounded-md transition-all duration-200">
              <i class="fas fa-sliders-h mr-3"></i>
              <span>Visibility Controls</span>
            </a>
          </li>
          <li class="mb-1 px-2">
            <a href="/admin/files.html"
              class="flex items-center py-3 px-4 text-blue-100 hover:bg-blue-800 rounded-md transition-all duration-200">
              <i class="fas fa-users mr-3"></i>
              <span>File Upload</span>
            </a>
          </li>
          <li class="mb-1 px-2">
            <a href="/admin/eResources.html"
              class="flex items-center py-3 px-4 text-blue-100 hover:bg-blue-800 rounded-md transition-all duration-200">
              <i class="fas fa-file-alt mr-3"></i>
              <span>e-Resources</span>
            </a>
          </li>
           <li class="mb-1 px-2">
            <a href="/admin/latest_news.html" class="flex items-center py-3 px-4 text-blue-100 hover:bg-blue-800 rounded-md transition-all duration-200">
              <i class="fas fa-edit mr-3"></i>
              <span>Latest News & Scrolling</span>
            </a>
          </li>
          <li class="mb-1 px-2">
            <a href="/admin/formData" class="flex items-center py-3 px-4 text-blue-100 hover:bg-blue-800 rounded-md transition-all duration-200">
              <i class="fas fa-ticket-alt mr-3"></i>
              <span>User Requests</span>
            </a>
          </li>
          <li class="mb-1 px-2">
            <a href="/admin/cvGenerator.html" class="flex items-center py-3 px-4 text-blue-100 hover:bg-blue-800 rounded-md transition-all duration-200">
              <i class="fas fa-file-pdf mr-3"></i>
              <span>CV Generator</span>
            </a>
          </li>
          <br>
          <li style="padding-left: 13px; font-size: medium; font-size: 1.1rem;">Account</li>
          <li class="mb-1 px-2">
            <a href="/admin/logout"
              class="flex items-center py-3 px-4 text-blue-100 hover:bg-blue-800 rounded-md transition-all duration-200">
              <i class="fas fa-sign-out-alt mr-3"></i>
              <span>Logout</span>
            </a>
          </li>
        </ul>
      </nav>
    </aside>

    <!-- Overlay for mobile sidebar -->
    <div id="sidebar-overlay" class="fixed inset-0 bg-black bg-opacity-50 z-30 hidden md:hidden"></div>

    <!-- Main Content -->
    <main class="flex-1 overflow-y-auto">
      <div class="p-4 md:p-6">
        <!-- Header with mobile menu indicator -->
        <div class="flex justify-between items-center mb-6">
          <div class="flex items-center">
            <button id="mobile-menu-button" class="mr-3 text-gray-700 md:hidden">
              <i class="fas fa-bars text-xl"></i>
            </button>
            <h1 class="text-xl md:text-2xl font-bold text-gray-800">
              Research Publications
            </h1>
          </div>
          <div class="flex items-center space-x-4">
            <span class="text-gray-700 hidden sm:inline">Welcome, Admin</span>
            <div
              class="w-10 h-10 bg-blue-100 rounded-full flex items-center justify-center text-blue-800 font-semibold">
              A
            </div>
          </div>
        </div>

        <!-- Publication Stats Card -->
        <div class="bg-white shadow-md rounded-lg p-4 mb-6">
          <div class="flex flex-col md:flex-row justify-between items-center">
            <div class="mb-4 md:mb-0 flex items-center">
              <div class="w-12 h-12 rounded-full bg-blue-100 flex items-center justify-center text-blue-800 mr-4">
                <i class="fas fa-book text-xl"></i>
              </div>
              <div>
                <h2 class="text-lg font-semibold text-gray-700">
                  Total Publications
                </h2>
                <p class="text-3xl font-bold text-brand-primary">
                  <span id="publicationCount">0</span>
                </p>
              </div>
            </div>
            <div class="grid grid-cols-2 gap-4 md:grid-cols-3">
              <div class="text-center px-4 py-2 bg-blue-50 rounded-lg">
                <p class="text-sm text-gray-600">This Year</p>
                <p class="text-lg font-semibold text-blue-800" id="currentYearCount">
                  0
                </p>
              </div>
              <div class="text-center px-4 py-2 bg-green-50 rounded-lg">
                <p class="text-sm text-gray-600">Avg Impact</p>
                <p class="text-lg font-semibold text-green-700" id="avgImpactFactor">
                  0.00
                </p>
              </div>
              <div class="text-center px-4 py-2 bg-purple-50 rounded-lg hidden md:block">
                <p class="text-sm text-gray-600">Top Journal</p>
                <p class="text-lg font-semibold text-purple-700 truncate" id="topJournal">
                  -
                </p>
              </div>
            </div>
          </div>
        </div>

        <!-- Publication Form -->
        <div class="bg-white shadow-md rounded-lg p-4 sm:p-6 mb-6 sm:mb-8">
          <h2 class="text-xl font-semibold mb-4 text-gray-800 flex items-center">
            <i class="fas fa-edit mr-2 text-brand-primary"></i>
            Publication Details
          </h2>
          <form id="publicationForm" class="grid grid-cols-1 md:grid-cols-2 gap-4">
            <input type="hidden" id="publicationId" />

            <div class="flex flex-col">
              <label class="mb-2 text-gray-700" for="author">Authors</label>
              <input type="text" id="author" name="author" required
                class="border border-gray-300 p-2 rounded focus:outline-none focus:ring-2 focus:ring-brand-primary"
                placeholder="Lastname, F.N. et al." />
            </div>

            <div class="flex flex-col">
              <label class="mb-2 text-gray-700" for="title">Publication Title</label>
              <input type="text" id="title" name="title" required
                class="border border-gray-300 p-2 rounded focus:outline-none focus:ring-2 focus:ring-brand-primary" />
            </div>

            <div class="flex flex-col">
              <label class="mb-2 text-gray-700" for="journal">Journal Name</label>
              <input type="text" id="journal" name="journal" required
                class="border border-gray-300 p-2 rounded focus:outline-none focus:ring-2 focus:ring-brand-primary" />
            </div>

            <div class="flex flex-col">
              <label class="mb-2 text-gray-700" for="year">Publication Year</label>
              <input type="number" id="year" name="year" required min="1900" max="2100"
                class="border border-gray-300 p-2 rounded focus:outline-none focus:ring-2 focus:ring-brand-primary" />
            </div>

            <div class="flex flex-col">
              <label class="mb-2 text-gray-700" for="volumePages">Volume/Pages</label>
              <input type="text" id="volumePages" name="volumePages"
                class="border border-gray-300 p-2 rounded focus:outline-none focus:ring-2 focus:ring-brand-primary"
                placeholder="e.g., Vol 25, pp. 100-110" />
            </div>

            <div class="flex flex-col">
              <label class="mb-2 text-gray-700" for="impactFactor">Impact Factor</label>
              <input type="number" id="impactFactor" name="impactFactor" step="0.01" min="0"
                class="border border-gray-300 p-2 rounded focus:outline-none focus:ring-2 focus:ring-brand-primary" />
            </div>

            <div class="flex flex-col col-span-1 md:col-span-2">
              <label class="mb-2 text-gray-700" for="publicationLink">Publication Link</label>
              <input type="url" id="publicationLink" name="publicationLink"
                class="border border-gray-300 p-2 rounded focus:outline-none focus:ring-2 focus:ring-brand-primary"
                placeholder="https://doi.org/..." />
            </div>

            <div class="col-span-1 md:col-span-2 flex space-x-4">
              <button type="submit" id="addButton"
                class="flex-1 bg-brand-primary text-white p-3 rounded hover:bg-blue-700 transition duration-300 flex justify-center items-center">
                <i class="fas fa-plus mr-2"></i> Add Publication
              </button>
              <button type="button" id="updateButton"
                class="flex-1 bg-green-500 text-white p-3 rounded hover:bg-green-600 transition duration-300 hidden flex justify-center items-center">
                <i class="fas fa-save mr-2"></i> Update Publication
              </button>
              <button type="button" id="cancelEditButton"
                class="flex-1 bg-gray-500 text-white p-3 rounded hover:bg-gray-600 transition duration-300 hidden flex justify-center items-center">
                <i class="fas fa-times mr-2"></i> Cancel
              </button>
            </div>
          </form>
        </div>

        <!-- Search and Filter Section -->
        <div class="bg-white shadow-md rounded-lg p-4 mb-6">
          <h2 class="text-xl font-semibold mb-4 text-gray-800 flex items-center">
            <i class="fas fa-search mr-2 text-brand-primary"></i>
            Search Publications
          </h2>
          <div class="flex flex-wrap gap-4">
            <input type="text" id="searchInput" placeholder="Search publications..."
              class="flex-grow border border-gray-300 p-2 rounded focus:outline-none focus:ring-2 focus:ring-brand-primary" />
            <select id="yearFilter"
              class="border border-gray-300 p-2 rounded focus:outline-none focus:ring-2 focus:ring-brand-primary">
              <option value="">All Years</option>
            </select>
            <button id="searchButton"
              class="bg-brand-primary text-white p-2 rounded hover:bg-blue-700 transition duration-300 flex items-center">
              <i class="fas fa-search mr-2"></i> Search
            </button>
          </div>
        </div>

        <!-- Publications Grid -->
        <h2 class="text-xl font-semibold mb-4 text-gray-800 flex items-center">
          <i class="fas fa-list mr-2 text-brand-primary"></i>
          Publications List
        </h2>
        <div id="publicationsGrid" class="grid grid-cols-1 sm:grid-cols-2 md:grid-cols-3 lg:grid-cols-4 gap-4 sm:gap-6">
          <!-- Publications will be dynamically added here -->
        </div>

        <!-- Delete Confirmation Modal -->
        <div id="deleteModal" class="fixed inset-0 bg-black bg-opacity-50 z-50 hidden items-center justify-center p-4">
          <div class="bg-white rounded-lg p-6 max-w-sm w-full">
            <h2 class="text-xl font-bold mb-4 text-gray-800">
              Confirm Deletion
            </h2>
            <p class="mb-6 text-gray-600">
              Are you sure you want to delete this publication?
            </p>
            <div class="flex space-x-4">
              <button id="confirmDeleteBtn"
                class="flex-1 bg-red-500 text-white p-3 rounded hover:bg-red-600 transition duration-300 flex justify-center items-center">
                <i class="fas fa-trash-alt mr-2"></i> Delete
              </button>
              <button id="cancelDeleteBtn"
                class="flex-1 bg-gray-500 text-white p-3 rounded hover:bg-gray-600 transition duration-300 flex justify-center items-center">
                <i class="fas fa-times mr-2"></i> Cancel
              </button>
            </div>
          </div>
        </div>
      </div>
    </main>
  </div>

  <!-- Floating action button for mobile -->
  <button id="mobile-fab"
    class="md:hidden fixed bottom-4 right-4 bg-blue-800 text-white w-12 h-12 rounded-full flex items-center justify-center shadow-lg z-30">
    <i class="fas fa-plus"></i>
  </button>

  <script>
 // DOM Elements
const form = document.getElementById("publicationForm");
const publicationsGrid = document.getElementById("publicationsGrid");
const addButton = document.getElementById("addButton");
const updateButton = document.getElementById("updateButton");
const cancelEditButton = document.getElementById("cancelEditButton");
const deleteModal = document.getElementById("deleteModal");
const confirmDeleteBtn = document.getElementById("confirmDeleteBtn");
const cancelDeleteBtn = document.getElementById("cancelDeleteBtn");
const searchInput = document.getElementById("searchInput");
const yearFilter = document.getElementById("yearFilter");
const searchButton = document.getElementById("searchButton");
const publicationCount = document.getElementById("publicationCount");
const currentYearCount = document.getElementById("currentYearCount");
const avgImpactFactor = document.getElementById("avgImpactFactor");
const topJournal = document.getElementById("topJournal");

// Mobile menu elements
const mobileMenuButton = document.getElementById("mobile-menu-button");
const closeSidebarButton = document.getElementById("close-sidebar");
const sidebar = document.getElementById("sidebar");
const sidebarOverlay = document.getElementById("sidebar-overlay");
const mobileFab = document.getElementById("mobile-fab");

let currentDeletingPublicationId = null;
let publications = []; // Store publications for filtering

// Fetch Publications
async function fetchPublications() {
  try {
    // Fetch from your actual API endpoint
    const response = await fetch("/publications");
    if (!response.ok) {
      throw new Error("Failed to fetch publications");
    }
    publications = await response.json();

    renderPublications(publications);
    populateYearFilter(publications);
    updateStats(publications);
  } catch (error) {
    console.error("Error fetching publications:", error);
    alert("Failed to fetch publications. Please try again.");
  }
}

// Update Statistics
function updateStats(pubs) {
  publicationCount.textContent = pubs.length;

  const currentYear = new Date().getFullYear();
  const thisYearPubs = pubs.filter((pub) => pub.year === currentYear);
  currentYearCount.textContent = thisYearPubs.length;

  // Avoid division by zero
  if (pubs.length > 0) {
    const totalImpact = pubs.reduce(
      (sum, pub) => sum + (parseFloat(pub.impactFactor) || 0),
      0
    );
    avgImpactFactor.textContent = (totalImpact / pubs.length).toFixed(2);
  } else {
    avgImpactFactor.textContent = "0.00";
  }

  // Find most common journal
  const journalCounts = {};
  pubs.forEach((pub) => {
    if (pub.journal) {
      journalCounts[pub.journal] = (journalCounts[pub.journal] || 0) + 1;
    }
  });

  let maxCount = 0;
  let maxJournal = "";
  for (const journal in journalCounts) {
    if (journalCounts[journal] > maxCount) {
      maxCount = journalCounts[journal];
      maxJournal = journal;
    }
  }

  topJournal.textContent = maxJournal || "-";
}

// Populate Year Filter Dropdown
function populateYearFilter(pubs) {
  const years = [...new Set(pubs.map((pub) => pub.year))].sort(
    (a, b) => b - a
  );
  yearFilter.innerHTML = '<option value="">All Years</option>';
  years.forEach((year) => {
    const option = document.createElement("option");
    option.value = year;
    option.textContent = year;
    yearFilter.appendChild(option);
  });
}

// Render Publications as Cards
function renderPublications(pubs) {
  if (pubs.length === 0) {
    publicationsGrid.innerHTML = `
      <div class="col-span-1 sm:col-span-2 md:col-span-3 lg:col-span-4 text-center p-8">
        <p class="text-gray-500">No publications found. Add your first publication using the form above.</p>
      </div>
    `;
    return;
  }

  publicationsGrid.innerHTML = pubs
    .map(
      (publication) => `
            <div class="bg-white shadow-md rounded-lg overflow-hidden transform transition duration-300 hover:shadow-lg hover:-translate-y-1">
                <div class="p-4">
                    <h3 class="font-bold text-lg mb-2 text-gray-800 line-clamp-2">${escapeHtml(
                      publication.title
                    )}</h3>
                    <p class="text-gray-600 text-sm mb-2 italic line-clamp-1">${escapeHtml(
                      publication.author
                    )}</p>
                    <div class="flex justify-between items-center mb-2">
                        <span class="text-sm text-gray-500 line-clamp-1">${escapeHtml(
                          publication.journal
                        )}</span>
                        <span class="text-sm text-gray-500">${publication.year}</span>
                    </div>
                    <div class="flex justify-between items-center mb-2">
                        <span class="text-sm text-blue-600">Impact Factor: ${(
                          parseFloat(publication.impactFactor) || 0
                        ).toFixed(2)}</span>
                        ${
                          publication.publicationLink
                            ? `
                            <a 
                                href="${publication.publicationLink}" 
                                target="_blank" 
                                class="text-sm text-brand-primary hover:underline"
                            >
                                <i class="fas fa-external-link-alt mr-1"></i> View
                            </a>
                        `
                            : ""
                        }
                    </div>
                    <div class="mt-4 flex space-x-2">
                        <button 
                            onclick="editPublication('${publication._id}')"
                            class="flex-1 bg-yellow-500 text-white p-2 rounded hover:bg-yellow-600 transition duration-300 flex items-center justify-center"
                        >
                            <i class="fas fa-edit mr-1"></i> Edit
                        </button>
                        <button 
                            onclick="confirmDelete('${publication._id}')"
                            class="flex-1 bg-red-500 text-white p-2 rounded hover:bg-red-600 transition duration-300 flex items-center justify-center"
                        >
                            <i class="fas fa-trash-alt mr-1"></i> Delete
                        </button>
                    </div>
                </div>
            </div>
        `
    )
    .join("");
}

// Search and Filter Publications
function searchAndFilterPublications() {
  const searchTerm = searchInput.value.toLowerCase().trim();
  const selectedYear = yearFilter.value;

  const filteredPublications = publications.filter((pub) => {
    const matchesSearch =
      searchTerm === "" ||
      (pub.title && pub.title.toLowerCase().includes(searchTerm)) ||
      (pub.author && pub.author.toLowerCase().includes(searchTerm)) ||
      (pub.journal && pub.journal.toLowerCase().includes(searchTerm));

    const matchesYear =
      selectedYear === "" || pub.year.toString() === selectedYear;

    return matchesSearch && matchesYear;
  });

  renderPublications(filteredPublications);
}

// Attach search event listeners
searchButton.addEventListener("click", searchAndFilterPublications);
searchInput.addEventListener("input", searchAndFilterPublications);
yearFilter.addEventListener("change", searchAndFilterPublications);

// Escape HTML to prevent XSS
function escapeHtml(unsafe) {
  if (!unsafe) return "";
  return unsafe
    .toString()
    .replace(/&/g, "&amp;")
    .replace(/</g, "&lt;")
    .replace(/>/g, "&gt;")
    .replace(/"/g, "&quot;")
    .replace(/'/g, "&#039;");
}

// Show success message
function showSuccessMessage(message) {
  // Create success message element
  const successAlert = document.createElement('div');
  successAlert.className = 'fixed top-4 right-4 bg-green-500 text-white px-6 py-3 rounded shadow-lg z-50 animate-fade-in-out';
  successAlert.innerHTML = `
    <div class="flex items-center">
      <i class="fas fa-check-circle mr-2"></i>
      <span>${message}</span>
    </div>
  `;
  
  // Add to body
  document.body.appendChild(successAlert);
  
  // Remove after 3 seconds
  setTimeout(() => {
    successAlert.classList.add('fade-out');
    setTimeout(() => {
      document.body.removeChild(successAlert);
    }, 500);
  }, 3000);
}

// Add this CSS to your <head> section:
// <style>
//   .animate-fade-in-out {
//     animation: fadeIn 0.3s ease-in;
//   }
//   .fade-out {
//     animation: fadeOut 0.5s ease-out;
//     opacity: 0;
//   }
//   @keyframes fadeIn {
//     from { opacity: 0; transform: translateY(-20px); }
//     to { opacity: 1; transform: translateY(0); }
//   }
//   @keyframes fadeOut {
//     from { opacity: 1; }
//     to { opacity: 0; }
//   }
// </style>

// Validate Form Inputs
function validateForm() {
  const author = document.getElementById("author").value.trim();
  const title = document.getElementById("title").value.trim();
  const journal = document.getElementById("journal").value.trim();
  const year = document.getElementById("year").value;
  const publicationLink = document.getElementById("publicationLink").value.trim();

  if (!author || !title || !journal || !year) {
    alert("Please fill out all required fields");
    return false;
  }

  if (year < 1900 || year > new Date().getFullYear()) {
    alert(`Year must be between 1900 and ${new Date().getFullYear()}`);
    return false;
  }

  if (publicationLink && !publicationLink.startsWith("http")) {
    alert("Publication link must be a valid URL");
    return false;
  }

  return true;
}

// Add Publication
form.addEventListener("submit", async (e) => {
  e.preventDefault();

  if (!validateForm()) return;

  const publicationData = {
    author: document.getElementById("author").value.trim(),
    title: document.getElementById("title").value.trim(),
    journal: document.getElementById("journal").value.trim(),
    year: parseInt(document.getElementById("year").value),
    volumePages: document.getElementById("volumePages").value.trim(),
    publicationLink: document.getElementById("publicationLink").value.trim(),
    impactFactor: parseFloat(document.getElementById("impactFactor").value) || 0,
  };

  try {
    const response = await fetch("/publications", {
      method: "POST",
      headers: { "Content-Type": "application/json" },
      body: JSON.stringify(publicationData),
    });

    if (!response.ok) {
      const errorData = await response.json();
      throw new Error(errorData.message || "Failed to add publication");
    }

    await fetchPublications();
    form.reset();
    
    // Show success message
    showSuccessMessage("Publication added successfully!");
    
  } catch (error) {
    console.error("Error adding publication:", error);
    alert(error.message);
  }
});

// Edit Publication
window.editPublication = function (id) {
  if (!id) {
    console.error("No publication ID provided for editing");
    return;
  }

  const publication = publications.find((pub) => pub._id === id);

  if (!publication) {
    console.error(`Publication with ID ${id} not found`);
    return;
  }

  document.getElementById("author").value = publication.author || "";
  document.getElementById("title").value = publication.title || "";
  document.getElementById("journal").value = publication.journal || "";
  document.getElementById("year").value = publication.year || "";
  document.getElementById("volumePages").value = publication.volumePages || "";
  document.getElementById("publicationLink").value = publication.publicationLink || "";
  document.getElementById("impactFactor").value = publication.impactFactor || "";
  document.getElementById("publicationId").value = publication._id;

  addButton.classList.add("hidden");
  updateButton.classList.remove("hidden");
  cancelEditButton.classList.remove("hidden");
  
  // Scroll to form
  form.scrollIntoView({ behavior: "smooth" });
};

// Cancel Edit
cancelEditButton.addEventListener("click", () => {
  form.reset();
  document.getElementById("publicationId").value = "";
  addButton.classList.remove("hidden");
  updateButton.classList.add("hidden");
  cancelEditButton.classList.add("hidden");
});

// Update Publication
updateButton.addEventListener("click", async () => {
  if (!validateForm()) return;

  const id = document.getElementById("publicationId").value;
  
  if (!id) {
    console.error("No publication ID found for update");
    alert("Error: Publication ID not found");
    return;
  }

  const publicationData = {
    author: document.getElementById("author").value.trim(),
    title: document.getElementById("title").value.trim(),
    journal: document.getElementById("journal").value.trim(),
    year: parseInt(document.getElementById("year").value),
    volumePages: document.getElementById("volumePages").value.trim(),
    publicationLink: document.getElementById("publicationLink").value.trim(),
    impactFactor: parseFloat(document.getElementById("impactFactor").value) || 0,
  };

  try {
    console.log(`Updating publication with ID: ${id}`);
    
    const response = await fetch(`/publications/${id}`, {
      method: "PUT",
      headers: { "Content-Type": "application/json" },
      body: JSON.stringify(publicationData),
    });

    if (!response.ok) {
      const errorData = await response.json();
      throw new Error(errorData.message || "Failed to update publication");
    }

    await fetchPublications();
    form.reset();
    document.getElementById("publicationId").value = "";
    addButton.classList.remove("hidden");
    updateButton.classList.add("hidden");
    cancelEditButton.classList.add("hidden");
    
    // Show success message
    showSuccessMessage("Publication updated successfully!");
    
  } catch (error) {
    console.error("Error updating publication:", error);
    alert(error.message);
  }
});

// Confirm Delete
window.confirmDelete = function(id) {
  if (!id) {
    console.error("No publication ID provided for deletion");
    return;
  }
  
  console.log(`Confirming deletion of publication with ID: ${id}`);
  currentDeletingPublicationId = id;
  deleteModal.classList.remove("hidden");
  deleteModal.classList.add("flex");
};

// Cancel Delete
cancelDeleteBtn.addEventListener("click", () => {
  deleteModal.classList.add("hidden");
  deleteModal.classList.remove("flex");
  currentDeletingPublicationId = null;
});

// Confirm Delete Action
confirmDeleteBtn.addEventListener("click", async () => {
  if (!currentDeletingPublicationId) {
    console.error("No publication ID to delete");
    return;
  }

  try {
    console.log(`Deleting publication with ID: ${currentDeletingPublicationId}`);
    
    const response = await fetch(`/publications/${currentDeletingPublicationId}`, {
      method: "DELETE",
    });

    if (!response.ok) {
      const errorData = await response.json();
      throw new Error(errorData.message || "Failed to delete publication");
    }

    await fetchPublications();
    deleteModal.classList.add("hidden");
    deleteModal.classList.remove("flex");
    currentDeletingPublicationId = null;
    
    // Show success message
    showSuccessMessage("Publication deleted successfully!");
    
  } catch (error) {
    console.error("Error deleting publication:", error);
    alert(error.message);
  }
});

// Initial fetch
fetchPublications();

// Mobile sidebar toggle functionality
mobileMenuButton.addEventListener("click", () => {
  sidebar.classList.remove("-translate-x-full");
  sidebarOverlay.classList.remove("hidden");
});

closeSidebarButton.addEventListener("click", () => {
  sidebar.classList.add("-translate-x-full");
  sidebarOverlay.classList.add("hidden");
});

sidebarOverlay.addEventListener("click", () => {
  sidebar.classList.add("-translate-x-full");
  sidebarOverlay.classList.add("hidden");
});

// Mobile FAB functionality
mobileFab.addEventListener("click", () => {
  // Scroll to the publication form
  form.scrollIntoView({ behavior: "smooth" });
});
  </script>
</body>

</html>
<!DOCTYPE html>
<html lang="en">

<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Conference Proceedings Management</title>
    <script src="https://cdn.tailwindcss.com"></script>
    <link href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.0.0-beta3/css/all.min.css" rel="stylesheet" />
    <script>
        tailwind.config = {
            theme: {
                extend: {
                    colors: {
                        "brand-primary": "#3B82F6",
                        "brand-secondary": "#10B981",
                    }
                }
            }
        }
    </script>
</head>

<body class="bg-gray-100">
    <div class="flex h-screen overflow-hidden relative">
        <!-- Sidebar - hidden on mobile by default -->
        <aside id="sidebar"
            class="w-64 bg-blue-900 text-white shadow-lg transition-all duration-300 ease-in-out z-40 fixed inset-y-0 left-0 transform -translate-x-full md:translate-x-0 md:relative md:block">
            <div class="p-6 border-b border-blue-800">
                <h2 class="text-xl font-bold tracking-wide">
                    Welcome, admin123!
                </h2>
                <!-- Close button for mobile -->
                <button id="close-sidebar" class="absolute top-4 right-4 text-white md:hidden">
                    <i class="fas fa-times text-xl"></i>
                </button>
            </div>
            <nav class="mt-4">
                <ul>
                    <li class="mb-1 px-2">
                        <a href="/admin"
                            class="flex items-center py-3 px-4 bg-blue-700 text-white rounded-md font-medium">
                            <i class="fas fa-home mr-3"></i>
                            <span>Dashboard</span>
                        </a>
                    </li>
                    <li class="mb-1 px-2">
                        <a href="/admin/control.html" class="flex items-center py-3 px-4 text-blue-100 hover:bg-blue-800 rounded-md transition-all duration-200">
                          <i class="fas fa-sliders-h mr-3"></i>
                          <span>Visibility Controls</span>
                        </a>
                      </li>
                      <li class="mb-1 px-2">
                        <a href="/admin/files.html"
                          class="flex items-center py-3 px-4 text-blue-100 hover:bg-blue-800 rounded-md transition-all duration-200">
                          <i class="fas fa-users mr-3"></i>
                          <span>File Upload</span>
                        </a>
                      </li>
                      <li class="mb-1 px-2">
                        <a href="/admin/eResources.html"
                          class="flex items-center py-3 px-4 text-blue-100 hover:bg-blue-800 rounded-md transition-all duration-200">
                          <i class="fas fa-file-alt mr-3"></i>
                          <span>e-Resources</span>
                        </a>
                      </li>
                       <li class="mb-1 px-2">
            <a href="/admin/latest_news.html" class="flex items-center py-3 px-4 text-blue-100 hover:bg-blue-800 rounded-md transition-all duration-200">
              <i class="fas fa-edit mr-3"></i>
              <span>Latest News & Scrolling</span>
            </a>
          </li>
                      <li class="mb-1 px-2">
                        <a href="/admin/formData" class="flex items-center py-3 px-4 text-blue-100 hover:bg-blue-800 rounded-md transition-all duration-200">
                          <i class="fas fa-ticket-alt mr-3"></i>
                          <span>User Requests</span>
                        </a>
                      </li>
                      <li class="mb-1 px-2">
                        <a href="/admin/cvGenerator.html" class="flex items-center py-3 px-4 text-blue-100 hover:bg-blue-800 rounded-md transition-all duration-200">
                          <i class="fas fa-file-pdf mr-3"></i>
                          <span>CV Generator</span>
                        </a>
                      </li>
                      <br>
                    <li style="padding-left: 13px; font-size: medium; font-size: 1.1rem;">Account</li>
                    <li class="mb-1 px-2">
                        <a href="/admin/logout"
                            class="flex items-center py-3 px-4 text-blue-100 hover:bg-blue-800 rounded-md transition-all duration-200">
                            <i class="fas fa-sign-out-alt mr-3"></i>
                            <span>Logout</span>
                        </a>
                    </li>
                </ul>
            </nav>
        </aside>

        <!-- Overlay for mobile sidebar -->
        <div id="sidebar-overlay" class="fixed inset-0 bg-black bg-opacity-50 z-30 hidden md:hidden"></div>

        <!-- Main Content -->
        <main class="flex-1 overflow-y-auto">
            <div class="p-4 md:p-6">
                <!-- Header with mobile menu indicator -->
                <div class="flex justify-between items-center mb-6">
                    <div class="flex items-center">
                        <button id="mobile-menu-button" class="mr-3 text-gray-700 md:hidden">
                            <i class="fas fa-bars text-xl"></i>
                        </button>
                        <h1 class="text-xl md:text-2xl font-bold text-gray-800">
                            Conference Proceedings Management
                        </h1>
                    </div>
                    <div class="flex items-center space-x-2 md:space-x-4">
                        <span class="text-gray-700 text-sm md:text-base hidden sm:inline">Welcome, Admin</span>
                        <div
                            class="w-8 h-8 md:w-10 md:h-10 bg-blue-100 rounded-full flex items-center justify-center text-blue-800 font-semibold">
                            A
                        </div>
                    </div>
                </div>

                <!-- Stats Card -->
                <div class="bg-white rounded-lg shadow-md p-4 mb-6 flex items-center">
                    <div class="mr-4 bg-brand-secondary bg-opacity-20 p-3 rounded-full">
                        <i class="fas fa-microphone text-xl text-brand-secondary"></i>
                    </div>
                    <div>
                        <h2 class="text-sm font-medium text-gray-500">Total Conference Proceedings</h2>
                        <p class="text-2xl font-bold text-gray-800" id="totalCount">0</p>
                    </div>
                </div>

                <!-- Conference Form -->
                <div class="bg-white shadow-md rounded-lg p-4 sm:p-6 mb-6 sm:mb-8">
                    <h2 class="text-lg font-semibold mb-4 text-gray-800">Add New Conference Proceeding</h2>
                    <form id="conferenceForm" class="grid grid-cols-1 md:grid-cols-2 gap-4">
                        <input type="hidden" id="conferenceId">

                        <div class="flex flex-col">
                            <label class="mb-2 text-gray-700" for="author">Authors</label>
                            <input type="text" id="author" name="author" required
                                class="border border-gray-300 p-2 rounded focus:outline-none focus:ring-2 focus:ring-brand-primary"
                                placeholder="Lastname, F.N. et al.">
                        </div>

                        <div class="flex flex-col">
                            <label class="mb-2 text-gray-700" for="title">Paper Title</label>
                            <input type="text" id="title" name="title" required
                                class="border border-gray-300 p-2 rounded focus:outline-none focus:ring-2 focus:ring-brand-primary">
                        </div>

                        <div class="flex flex-col">
                            <label class="mb-2 text-gray-700" for="conference">Conference Name</label>
                            <input type="text" id="conference" name="conference" required
                                class="border border-gray-300 p-2 rounded focus:outline-none focus:ring-2 focus:ring-brand-primary">
                        </div>

                        <div class="flex flex-col">
                            <label class="mb-2 text-gray-700" for="date">Conference Date</label>
                            <input type="text" id="date" name="date" required
                                class="border border-gray-300 p-2 rounded focus:outline-none focus:ring-2 focus:ring-brand-primary"
                                placeholder="e.g., April 23-24, 2024">
                        </div>

                        <div class="flex flex-col">
                            <label class="mb-2 text-gray-700" for="place">Conference Location</label>
                            <input type="text" id="place" name="place" required
                                class="border border-gray-300 p-2 rounded focus:outline-none focus:ring-2 focus:ring-brand-primary"
                                placeholder="City, Country">
                        </div>

                        <div class="flex flex-col">
                            <label class="mb-2 text-gray-700" for="year">Year</label>
                            <input type="number" id="year" name="year" required min="1900" max="2100"
                                class="border border-gray-300 p-2 rounded focus:outline-none focus:ring-2 focus:ring-brand-primary">
                        </div>

                        <div class="col-span-1 md:col-span-2 flex space-x-4">
                            <button type="submit" id="addButton"
                                class="flex-1 bg-brand-primary text-white p-3 rounded hover:bg-blue-700 transition duration-300">
                                <i class="fas fa-plus mr-2"></i> Add Conference Proceeding
                            </button>
                            <button type="button" id="updateButton"
                                class="flex-1 bg-blue-500 text-white p-3 rounded hover:bg-blue-600 transition duration-300 hidden">
                                <i class="fas fa-save mr-2"></i> Update Proceeding
                            </button>
                            <button type="button" id="cancelEditButton"
                                class="flex-1 bg-gray-500 text-white p-3 rounded hover:bg-gray-600 transition duration-300 hidden">
                                <i class="fas fa-times mr-2"></i> Cancel
                            </button>
                        </div>
                    </form>
                </div>

                <!-- Search and Filter Section -->
                <div class="mb-6 bg-white p-4 rounded-lg shadow-md">
                    <h2 class="text-lg font-semibold mb-4 text-gray-800">Search and Filter</h2>
                    <div class="flex flex-wrap gap-4">
                        <div class="flex-grow">
                            <div class="relative">
                                <span class="absolute inset-y-0 left-0 flex items-center pl-3">
                                    <i class="fas fa-search text-gray-400"></i>
                                </span>
                                <input type="text" id="searchInput" placeholder="Search conference proceedings..."
                                    class="w-full border border-gray-300 pl-10 p-2 rounded focus:outline-none focus:ring-2 focus:ring-brand-primary">
                            </div>
                        </div>
                        <div>
                            <select id="yearFilter"
                                class="border border-gray-300 p-2 rounded focus:outline-none focus:ring-2 focus:ring-brand-primary">
                                <option value="">All Years</option>
                            </select>
                        </div>
                        <button id="searchButton"
                            class="bg-brand-secondary text-white px-4 py-2 rounded hover:bg-blue-700 transition duration-300">
                            <i class="fas fa-search mr-2"></i> Search
                        </button>
                    </div>
                </div>

                <!-- Conference Proceedings Grid -->
                <div id="conferencesGrid"
                    class="grid grid-cols-1 sm:grid-cols-2 lg:grid-cols-3 xl:grid-cols-4 gap-4 sm:gap-6">
                    <!-- Conference proceedings will be dynamically added here -->
                </div>

                <!-- Delete Confirmation Modal -->
                <div id="deleteModal"
                    class="fixed inset-0 bg-black bg-opacity-50 z-50 hidden items-center justify-center p-4">
                    <div class="bg-white rounded-lg p-6 max-w-sm w-full">
                        <h2 class="text-xl font-bold mb-4 text-gray-800">Confirm Deletion</h2>
                        <p class="mb-6 text-gray-600">Are you sure you want to delete this conference proceeding?</p>
                        <div class="flex space-x-4">
                            <button id="confirmDeleteBtn"
                                class="flex-1 bg-red-500 text-white p-3 rounded hover:bg-red-600 transition duration-300">
                                <i class="fas fa-trash-alt mr-2"></i> Delete
                            </button>
                            <button id="cancelDeleteBtn"
                                class="flex-1 bg-gray-500 text-white p-3 rounded hover:bg-gray-600 transition duration-300">
                                <i class="fas fa-times mr-2"></i> Cancel
                            </button>
                        </div>
                    </div>
                </div>
            </div>
        </main>
    </div>

    <!-- Floating action button for mobile -->
    <button id="mobile-fab"
        class="md:hidden fixed bottom-4 right-4 bg-brand-primary text-white w-12 h-12 rounded-full flex items-center justify-center shadow-lg z-30">
        <i class="fas fa-plus"></i>
    </button>

    <script>
        // DOM Elements
        const form = document.getElementById('conferenceForm');
        const conferencesGrid = document.getElementById('conferencesGrid');
        const addButton = document.getElementById('addButton');
        const updateButton = document.getElementById('updateButton');
        const cancelEditButton = document.getElementById('cancelEditButton');
        const deleteModal = document.getElementById('deleteModal');
        const confirmDeleteBtn = document.getElementById('confirmDeleteBtn');
        const cancelDeleteBtn = document.getElementById('cancelDeleteBtn');
        const searchInput = document.getElementById('searchInput');
        const yearFilter = document.getElementById('yearFilter');
        const searchButton = document.getElementById('searchButton');
        const totalCountElement = document.getElementById('totalCount');
        const mobileMenuButton = document.getElementById("mobile-menu-button");
        const closeSidebarButton = document.getElementById("close-sidebar");
        const sidebar = document.getElementById("sidebar");
        const sidebarOverlay = document.getElementById("sidebar-overlay");
        const mobileFab = document.getElementById("mobile-fab");

        let currentDeletingConferenceId = null;
        let conferences = []; // Store conferences for filtering

        // Fetch Conference Proceedings
        async function fetchConferences() {
            try {
                const response = await fetch('/conferences');
                conferences = await response.json();
                renderConferences(conferences);
                populateYearFilter(conferences);
                updateTotalCount(conferences.length);
            } catch (error) {
                console.error('Error fetching conferences:', error);
                alert('Failed to fetch conference proceedings. Please try again.');
            }
        }

        // Update total count
        function updateTotalCount(count) {
            totalCountElement.textContent = count;
        }

        // Populate Year Filter Dropdown
        function populateYearFilter(conferences) {
            const years = [...new Set(conferences.map(conf => conf.year))].sort((a, b) => b - a);
            yearFilter.innerHTML = '<option value="">All Years</option>';
            years.forEach(year => {
                const option = document.createElement('option');
                option.value = year;
                option.textContent = year;
                yearFilter.appendChild(option);
            });
        }

        // Render Conference Proceedings as Cards
        function renderConferences(conferences) {
            conferencesGrid.innerHTML = conferences.map(conference => `
                <div class="bg-white shadow-md rounded-lg overflow-hidden transform transition duration-300 hover:shadow-lg hover:-translate-y-1">
                    <div class="bg-brand-secondary bg-opacity-10 p-3 border-b">
                        <h3 class="font-bold text-lg text-gray-800 line-clamp-2">${escapeHtml(conference.title)}</h3>
                    </div>
                    <div class="p-4">
                        <p class="text-gray-600 text-sm mb-2 italic line-clamp-1">${escapeHtml(conference.author)}</p>
                        <div class="flex justify-between items-center mb-2">
                            <span class="text-sm text-gray-500 line-clamp-1">${escapeHtml(conference.conference)}</span>
                            <span class="text-sm font-semibold text-brand-secondary">${conference.year}</span>
                        </div>
                        <div class="flex justify-between items-center mb-2">
                            <div class="flex items-center text-sm text-gray-600">
                                <i class="fas fa-calendar-alt mr-1 text-brand-primary"></i>
                                <span>${escapeHtml(conference.date)}</span>
                            </div>
                            <div class="flex items-center text-sm text-gray-600">
                                <i class="fas fa-map-marker-alt mr-1 text-brand-primary"></i>
                                <span>${escapeHtml(conference.place)}</span>
                            </div>
                        </div>
                        <div class="mt-4 flex space-x-2">
                            <button 
                                onclick="editConference('${conference._id}')"
                                class="flex-1 bg-yellow-500 text-white p-2 rounded hover:bg-yellow-600 transition duration-300 flex items-center justify-center"
                            >
                                <i class="fas fa-edit mr-1"></i> Edit
                            </button>
                            <button 
                                onclick="confirmDelete('${conference._id}')"
                                class="flex-1 bg-red-500 text-white p-2 rounded hover:bg-red-600 transition duration-300 flex items-center justify-center"
                            >
                                <i class="fas fa-trash-alt mr-1"></i> Delete
                            </button>
                        </div>
                    </div>
                </div>
            `).join('');
        }

        // Search and Filter Conference Proceedings
        function searchAndFilterConferences() {
            const searchTerm = searchInput.value.toLowerCase().trim();
            const selectedYear = yearFilter.value;

            const filteredConferences = conferences.filter(conf => {
                const matchesSearch = searchTerm === '' ||
                    conf.title.toLowerCase().includes(searchTerm) ||
                    conf.author.toLowerCase().includes(searchTerm) ||
                    conf.conference.toLowerCase().includes(searchTerm) ||
                    conf.place.toLowerCase().includes(searchTerm);

                const matchesYear = selectedYear === '' ||
                    conf.year.toString() === selectedYear;

                return matchesSearch && matchesYear;
            });

            renderConferences(filteredConferences);

            // Update displayed count based on filtered results
            updateTotalCount(filteredConferences.length);
        }

        // Attach search event listeners
        searchButton.addEventListener('click', searchAndFilterConferences);
        searchInput.addEventListener('input', searchAndFilterConferences);
        yearFilter.addEventListener('change', searchAndFilterConferences);

        // Escape HTML to prevent XSS
        function escapeHtml(unsafe) {
            return unsafe
                .replace(/&/g, "&amp;")
                .replace(/</g, "&lt;")
                .replace(/>/g, "&gt;")
                .replace(/"/g, "&quot;")
                .replace(/'/g, "&#039;");
        }

        // Validate Form Inputs
        function validateForm() {
            const author = document.getElementById('author').value.trim();
            const title = document.getElementById('title').value.trim();
            const conference = document.getElementById('conference').value.trim();
            const date = document.getElementById('date').value.trim();
            const place = document.getElementById('place').value.trim();
            const year = document.getElementById('year').value;

            if (year < 1900 || year > new Date().getFullYear()) {
                alert(`Year must be between 1900 and ${new Date().getFullYear()}`);
                return false;
            }

            return true;
        }

        // Add Conference Proceeding
        form.addEventListener('submit', async (e) => {
            e.preventDefault();

            if (!validateForm()) return;

            const conferenceData = {
                author: document.getElementById('author').value.trim(),
                title: document.getElementById('title').value.trim(),
                conference: document.getElementById('conference').value.trim(),
                date: document.getElementById('date').value.trim(),
                place: document.getElementById('place').value.trim(),
                year: document.getElementById('year').value
            };

            try {
                const response = await fetch('/conferences', {
                    method: 'POST',
                    headers: { 'Content-Type': 'application/json' },
                    body: JSON.stringify(conferenceData)
                });

                if (!response.ok) {
                    const errorData = await response.json();
                    throw new Error(errorData.message || 'Failed to add conference proceeding');
                }

                await fetchConferences();
                form.reset();
            } catch (error) {
                console.error('Error adding conference proceeding:', error);
                alert(error.message);
            }
        });

        // Edit Conference Proceeding
        async function editConference(id) {
            try {
                const response = await fetch(`/conferences/${id}`);

                if (!response.ok) {
                    throw new Error('Failed to fetch conference proceeding details');
                }

                const conference = await response.json();

                document.getElementById('author').value = conference.author;
                document.getElementById('title').value = conference.title;
                document.getElementById('conference').value = conference.conference;
                document.getElementById('date').value = conference.date;
                document.getElementById('place').value = conference.place;
                document.getElementById('year').value = conference.year;
                document.getElementById('conferenceId').value = conference._id;

                addButton.classList.add('hidden');
                updateButton.classList.remove('hidden');
                cancelEditButton.classList.remove('hidden');
            } catch (error) {
                console.error('Error fetching conference details:', error);
                alert('Failed to load conference proceeding details');
            }
        }

        // Cancel Edit
        cancelEditButton.addEventListener('click', () => {
            form.reset();
            addButton.classList.remove('hidden');
            updateButton.classList.add('hidden');
            cancelEditButton.classList.add('hidden');
        });

        // Update Conference Proceeding
        updateButton.addEventListener('click', async () => {
            if (!validateForm()) return;

            const id = document.getElementById('conferenceId').value;
            const conferenceData = {
                author: document.getElementById('author').value.trim(),
                title: document.getElementById('title').value.trim(),
                conference: document.getElementById('conference').value.trim(),
                date: document.getElementById('date').value.trim(),
                place: document.getElementById('place').value.trim(),
                year: document.getElementById('year').value
            };

            try {
                const response = await fetch(`/conferences/${id}`, {
                    method: 'PUT',
                    headers: { 'Content-Type': 'application/json' },
                    body: JSON.stringify(conferenceData)
                });

                if (!response.ok) {
                    const errorData = await response.json();
                    throw new Error(errorData.message || 'Failed to update conference proceeding');
                }

                await fetchConferences();
                form.reset();
                addButton.classList.remove('hidden');
                updateButton.classList.add('hidden');
                cancelEditButton.classList.add('hidden');
            } catch (error) {
                console.error('Error updating conference proceeding:', error);
                alert(error.message);
            }
        });

        // Confirm Delete
        function confirmDelete(id) {
            currentDeletingConferenceId = id;
            deleteModal.classList.remove('hidden');
            deleteModal.classList.add('flex');
        }

        // Cancel Delete
        cancelDeleteBtn.addEventListener('click', () => {
            deleteModal.classList.add('hidden');
            deleteModal.classList.remove('flex');
            currentDeletingConferenceId = null;
        });

        // Confirm Delete Action
        confirmDeleteBtn.addEventListener('click', async () => {
            if (!currentDeletingConferenceId) return;

            try {
                const response = await fetch(`/conferences/${currentDeletingConferenceId}`, {
                    method: 'DELETE'
                });

                if (!response.ok) {
                    const errorData = await response.json();
                    throw new Error(errorData.message || 'Failed to delete conference proceeding');
                }

                await fetchConferences();
                deleteModal.classList.add('hidden');
                deleteModal.classList.remove('flex');
                currentDeletingConferenceId = null;
            } catch (error) {
                console.error('Error deleting conference proceeding:', error);
                alert(error.message);
            }
        });

        // Mobile menu toggle functionality
        // Function to open sidebar
        function openSidebar() {
            sidebar.classList.remove("-translate-x-full");
            sidebarOverlay.classList.remove("hidden");
            document.body.classList.add("overflow-hidden");
        }

        // Function to close sidebar
        function closeSidebar() {
            sidebar.classList.add("-translate-x-full");
            sidebarOverlay.classList.add("hidden");
            document.body.classList.remove("overflow-hidden");
        }

        // Event listeners
        if (mobileMenuButton) {
            mobileMenuButton.addEventListener("click", openSidebar);
        }

        if (closeSidebarButton) {
            closeSidebarButton.addEventListener("click", closeSidebar);
        }

        if (sidebarOverlay) {
            sidebarOverlay.addEventListener("click", closeSidebar);
        }

        // Optional: Close sidebar when clicking on a menu item on mobile
        const sidebarLinks = sidebar.querySelectorAll("a");
        sidebarLinks.forEach((link) => {
            link.addEventListener("click", () => {
                if (window.innerWidth < 768) {
                    // Only on mobile
                    closeSidebar();
                }
            });
        });

        // Optional: Toggle floating action button
        if (mobileFab) {
            mobileFab.addEventListener("click", () => {
                // This could open/focus on the form for quick adding
                window.scrollTo({
                    top: form.offsetTop - 20,
                    behavior: 'smooth'
                });
            });
        }

        // Handle resize events - ensure sidebar is visible on desktop
        window.addEventListener("resize", () => {
            if (window.innerWidth >= 768) {
                // md breakpoint
                sidebar.classList.remove("-translate-x-full");
                sidebarOverlay.classList.add("hidden");
                document.body.classList.remove("overflow-hidden");
            } else {
                sidebar.classList.add("-translate-x-full");
            }
        });

        // Initial fetch
        fetchConferences();
    </script>
</body>

</html>
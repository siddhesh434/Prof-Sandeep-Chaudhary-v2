<!DOCTYPE html>
<html lang="en">

<head>
  <meta charset="UTF-8">
  <meta name="viewport" content="width=device-width, initial-scale=1.0">
  <title>Admin Portal</title>
  <script src="https://cdn.tailwindcss.com"></script>
  <link href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.0.0-beta3/css/all.min.css" rel="stylesheet" />
</head>

<body class="bg-gray-100">
  <div class="flex h-screen overflow-hidden relative">
    <!-- Sidebar - hidden on mobile by default -->
    <aside id="sidebar"
      class="w-64 bg-blue-900 text-white shadow-lg transition-all duration-300 ease-in-out z-40 fixed inset-y-0 left-0 transform -translate-x-full md:translate-x-0 md:relative md:block">
      <div class="p-6 border-b border-blue-800">
        <h2 class="text-xl font-bold tracking-wide">
          Welcome, admin123!
        </h2>
        <!-- Close button for mobile -->
        <button id="close-sidebar" class="absolute top-4 right-4 text-white md:hidden">
          <i class="fas fa-times text-xl"></i>
        </button>
      </div>
      <nav class="mt-4">
        <ul>
          <li class="mb-1 px-2">
            <a href="/admin" class="flex items-center py-3 px-4 text-blue-100 hover:bg-blue-800 rounded-md transition-all duration-200">
              <i class="fas fa-home mr-3"></i>
              <span>Dashboard</span>
            </a>
          </li>
          <li class="mb-1 px-2">
            <a href="/admin/control.html" class="flex items-center py-3 px-4 text-blue-100 hover:bg-blue-800 rounded-md transition-all duration-200">
              <i class="fas fa-sliders-h mr-3"></i>
              <span>Visibility Controls</span>
            </a>
          </li>
          <li class="mb-1 px-2">
            <a href="/admin/files.html"
              class="flex items-center py-3 px-4 text-blue-100 hover:bg-blue-800 rounded-md transition-all duration-200">
              <i class="fas fa-users mr-3"></i>
              <span>File Upload</span>
            </a>
          </li>
          <li class="mb-1 px-2">
            <a href="/admin/eResources.html"
              class="flex items-center py-3 px-4 text-blue-100 hover:bg-blue-800 rounded-md transition-all duration-200">
              <i class="fas fa-file-alt mr-3"></i>
              <span>e-Resources</span>
            </a>
          </li>
           <li class="mb-1 px-2">
            <a href="/admin/latest_news.html" class="flex items-center py-3 px-4 text-blue-100 hover:bg-blue-800 rounded-md transition-all duration-200">
              <i class="fas fa-edit mr-3"></i>
              <span>Latest News & Scrolling</span>
            </a>
          </li>
          <li class="mb-1 px-2">
            <a href="/admin/formData" class="flex items-center py-3 px-4 bg-blue-700 text-white rounded-md font-medium">
              <i class="fas fa-ticket-alt mr-3"></i>
              <span>User Requests</span>
            </a>
          </li>
          <li class="mb-1 px-2">
            <a href="/admin/cvGenerator.html" class="flex items-center py-3 px-4 text-blue-100 hover:bg-blue-800 rounded-md transition-all duration-200">
              <i class="fas fa-file-pdf mr-3"></i>
              <span>CV Generator</span>
            </a>
          </li>
          <br>
          <li style="padding-left: 13px; font-size: medium; font-size: 1.1rem;">Account</li>
          <li class="mb-1 px-2">
            <a href="/admin/logout"
              class="flex items-center py-3 px-4 text-blue-100 hover:bg-blue-800 rounded-md transition-all duration-200">
              <i class="fas fa-sign-out-alt mr-3"></i>
              <span>Logout</span>
            </a>
          </li>
        </ul>
      </nav>
    </aside>

    <!-- Overlay for mobile sidebar -->
    <div id="sidebar-overlay" class="fixed inset-0 bg-black bg-opacity-50 z-30 hidden md:hidden"></div>

    <!-- Main Content -->
    <main class="flex-1 overflow-y-auto">
      <div class="p-4 md:p-6">
        <!-- Header with mobile menu indicator -->
        <div class="flex justify-between items-center mb-6 md:mb-8">
          <div class="flex items-center">
            <button id="mobile-menu-button" class="mr-3 text-gray-700 md:hidden">
              <i class="fas fa-bars text-xl"></i>
            </button>
            <h1 class="text-xl md:text-2xl font-bold text-gray-800">
              Admin Portal - User Requests
            </h1>
          </div>
          <div class="flex items-center space-x-2 md:space-x-4">
            <span class="text-gray-700 text-sm md:text-base hidden sm:inline">Welcome, Admin</span>
            <div class="w-8 h-8 md:w-10 md:h-10 bg-blue-100 rounded-full flex items-center justify-center text-blue-800 font-semibold">
              A
            </div>
          </div>
        </div>

        <!-- Requests Container -->
        <div id="requestsContainer" class="grid grid-cols-1 gap-4">
          <!-- Requests will be loaded here -->
          <div class="text-center py-4 text-gray-500">Loading requests...</div>
        </div>
      </div>
    </main>
  </div>

  <!-- Floating action button for mobile -->
  <button id="mobile-fab"
    class="md:hidden fixed bottom-4 right-4 bg-blue-800 text-white w-12 h-12 rounded-full flex items-center justify-center shadow-lg z-30">
    <i class="fas fa-plus"></i>
  </button>

  <script>
    // Mobile menu toggle functionality
    const mobileMenuButton = document.getElementById("mobile-menu-button");
    const closeSidebarButton = document.getElementById("close-sidebar");
    const sidebar = document.getElementById("sidebar");
    const sidebarOverlay = document.getElementById("sidebar-overlay");
    const mobileFab = document.getElementById("mobile-fab");

    // Function to open sidebar
    function openSidebar() {
      sidebar.classList.remove("-translate-x-full");
      sidebarOverlay.classList.remove("hidden");
      document.body.classList.add("overflow-hidden");
    }

    // Function to close sidebar
    function closeSidebar() {
      sidebar.classList.add("-translate-x-full");
      sidebarOverlay.classList.add("hidden");
      document.body.classList.remove("overflow-hidden");
    }

    // Event listeners
    if (mobileMenuButton) {
      mobileMenuButton.addEventListener("click", openSidebar);
    }

    if (closeSidebarButton) {
      closeSidebarButton.addEventListener("click", closeSidebar);
    }

    if (sidebarOverlay) {
      sidebarOverlay.addEventListener("click", closeSidebar);
    }

    // Optional: Close sidebar when clicking on a menu item on mobile
    const sidebarLinks = sidebar.querySelectorAll("a");
    sidebarLinks.forEach((link) => {
      link.addEventListener("click", () => {
        if (window.innerWidth < 768) {
          // Only on mobile
          closeSidebar();
        }
      });
    });

    // Optional: Toggle floating action button
    if (mobileFab) {
      mobileFab.addEventListener("click", () => {
        // Add ability to create a new request
        alert("Create new request functionality would go here");
      });
    }

    // Handle resize events - ensure sidebar is visible on desktop
    window.addEventListener("resize", () => {
      if (window.innerWidth >= 768) {
        // md breakpoint
        sidebar.classList.remove("-translate-x-full");
        sidebarOverlay.classList.add("hidden");
        document.body.classList.remove("overflow-hidden");
      } else {
        sidebar.classList.add("-translate-x-full");
      }
    });

    // Function to format date
    function formatDate(dateString) {
      const options = { year: 'numeric', month: 'short', day: 'numeric', hour: '2-digit', minute: '2-digit' };
      return new Date(dateString).toLocaleDateString('en-US', options);
    }
    
    // Function to create a request card
    function createRequestCard(request) {
      return `
        <div class="border rounded-lg p-4 bg-white shadow-sm hover:shadow-md transition-all duration-300 hover:-translate-y-1" data-id="${request._id}">
          <div class="flex justify-between items-start">
            <div>
              <h3 class="font-bold text-lg">${request.name}</h3>
              <p class="text-sm text-gray-600">Submitted: ${formatDate(request.createdAt)}</p>
            </div>
            <div class="flex space-x-2">
              <button class="resolve-btn px-3 py-1 bg-blue-600 text-white rounded hover:bg-blue-700 transition-all duration-200 ${request.resolved ? 'opacity-50 cursor-not-allowed' : ''}">
                ${request.resolved ? '<i class="fas fa-check mr-1"></i> Resolved' : '<i class="fas fa-check mr-1"></i> Resolve'}
              </button>
              <button class="delete-btn px-3 py-1 bg-red-500 text-white rounded hover:bg-red-600 transition-all duration-200">
                <i class="fas fa-trash-alt mr-1"></i> Delete
              </button>
            </div>
          </div>
          
          <div class="mt-3 grid grid-cols-1 md:grid-cols-2 gap-3">
            <div>
              <p class="text-sm font-medium text-gray-700"><i class="fas fa-envelope text-blue-700 mr-2"></i>Email:</p>
              <p class="text-sm ml-6">${request.email}</p>
            </div>
            <div>
              <p class="text-sm font-medium text-gray-700"><i class="fas fa-phone text-blue-700 mr-2"></i>Contact:</p>
              <p class="text-sm ml-6">${request.contact}</p>
            </div>
          </div>
          
          <div class="mt-3">
            <p class="text-sm font-medium text-gray-700"><i class="fas fa-file-alt text-blue-700 mr-2"></i>Description:</p>
            <p class="text-sm bg-gray-50 p-3 rounded mt-1 border border-gray-200">${request.description}</p>
          </div>
          
          ${request.resolved ? `
            <div class="mt-3 text-sm text-green-600 flex items-center">
              <i class="fas fa-calendar-check mr-2"></i>
              <p>Resolved on: ${formatDate(request.resolvedAt)}</p>
            </div>
          ` : ''}
        </div>
      `;
    }
    
    // Function to load all requests
    async function loadRequests() {
      try {
        const response = await fetch('/api/requests');
        
        if (!response.ok) {
          throw new Error('Failed to load requests');
        }
        
        const requests = await response.json();
        const container = document.getElementById('requestsContainer');
        
        if (requests.length === 0) {
          container.innerHTML = '<div class="text-center py-8 text-gray-500"><i class="fas fa-inbox text-4xl mb-3"></i><p>No requests found</p></div>';
          return;
        }
        
        container.innerHTML = requests.map(request => createRequestCard(request)).join('');
        
        // Add event listeners to buttons
        document.querySelectorAll('.resolve-btn').forEach(btn => {
          if (!btn.closest('[data-id]').querySelector('.resolve-btn').classList.contains('opacity-50')) {
            btn.addEventListener('click', handleResolve);
          }
        });
        
        document.querySelectorAll('.delete-btn').forEach(btn => {
          btn.addEventListener('click', handleDelete);
        });
      } catch (error) {
        console.error('Error loading requests:', error);
        document.getElementById('requestsContainer').innerHTML = 
          `<div class="text-center py-8 text-red-500"><i class="fas fa-exclamation-triangle text-4xl mb-3"></i><p>Error loading requests: ${error.message}</p></div>`;
      }
    }
    
    // Handle resolve button click
    async function handleResolve(e) {
      const requestCard = e.target.closest('[data-id]');
      const requestId = requestCard.dataset.id;
      
      try {
        const response = await fetch(`/api/requests/${requestId}/resolve`, {
          method: 'PUT'
        });
        
        if (!response.ok) {
          throw new Error('Failed to resolve request');
        }
        
        // Reload requests to update UI
        loadRequests();
      } catch (error) {
        console.error('Error resolving request:', error);
        alert(`Error: ${error.message}`);
      }
    }
    
    // Handle delete button click
    async function handleDelete(e) {
      if (!confirm('Are you sure you want to delete this request?')) {
        return;
      }
      
      const requestCard = e.target.closest('[data-id]');
      const requestId = requestCard.dataset.id;
      
      try {
        const response = await fetch(`/api/requests/${requestId}`, {
          method: 'DELETE'
        });
        
        if (!response.ok) {
          throw new Error('Failed to delete request');
        }
        
        // Reload requests to update UI
        loadRequests();
      } catch (error) {
        console.error('Error deleting request:', error);
        alert(`Error: ${error.message}`);
      }
    }
    
    // Load requests when page loads
    document.addEventListener('DOMContentLoaded', loadRequests);
  </script>
</body>

</html>
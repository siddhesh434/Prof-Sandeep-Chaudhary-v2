<!DOCTYPE html>
<html lang="en">

<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Dissertation Management</title>
    <script src="https://cdn.tailwindcss.com"></script>
    <link href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.0.0-beta3/css/all.min.css" rel="stylesheet">
    <script>
        tailwind.config = {
            theme: {
                extend: {
                    colors: {
                        'brand-primary': '#3B82F6',
                        'brand-secondary': '#10B981',
                    }
                }
            }
        }
    </script>
</head>

<body class="bg-gray-100">
    <div class="flex h-screen overflow-hidden relative">
        <!-- Sidebar - hidden on mobile by default -->
        <aside id="sidebar"
            class="w-64 bg-blue-900 text-white shadow-lg transition-all duration-300 ease-in-out z-40 fixed inset-y-0 left-0 transform -translate-x-full md:translate-x-0 md:relative md:block">
            <div class="p-6 border-b border-blue-800">
                <h2 class="text-xl font-bold tracking-wide">Welcome, admin123!</h2>
                <!-- Close button for mobile -->
                <button id="close-sidebar" class="absolute top-4 right-4 text-white md:hidden">
                    <i class="fas fa-times text-xl"></i>
                </button>
            </div>
            <nav class="mt-4">
                <ul>
                    <li class="mb-1 px-2">
                        <a href="/admin"
                            class="flex items-center py-3 px-4 bg-blue-700 text-white rounded-md font-medium">
                            <i class="fas fa-home mr-3"></i>
                            <span>Dashboard</span>
                        </a>
                    </li>
                    <li class="mb-1 px-2">
                        <a href="/admin/control.html" class="flex items-center py-3 px-4 text-blue-100 hover:bg-blue-800 rounded-md transition-all duration-200">
                          <i class="fas fa-sliders-h mr-3"></i>
                          <span>Visibility Controls</span>
                        </a>
                      </li>
                      <li class="mb-1 px-2">
                        <a href="/admin/files.html"
                          class="flex items-center py-3 px-4 text-blue-100 hover:bg-blue-800 rounded-md transition-all duration-200">
                          <i class="fas fa-users mr-3"></i>
                          <span>File Upload</span>
                        </a>
                      </li>
                      <li class="mb-1 px-2">
                        <a href="/admin/eResources.html"
                          class="flex items-center py-3 px-4 text-blue-100 hover:bg-blue-800 rounded-md transition-all duration-200">
                          <i class="fas fa-file-alt mr-3"></i>
                          <span>e-Resources</span>
                        </a>
                      </li>
                       <li class="mb-1 px-2">
            <a href="/admin/latest_news.html" class="flex items-center py-3 px-4 text-blue-100 hover:bg-blue-800 rounded-md transition-all duration-200">
              <i class="fas fa-edit mr-3"></i>
              <span>Latest News & Scrolling</span>
            </a>
          </li>
                      <li class="mb-1 px-2">
                        <a href="/admin/formData" class="flex items-center py-3 px-4 text-blue-100 hover:bg-blue-800 rounded-md transition-all duration-200">
                          <i class="fas fa-ticket-alt mr-3"></i>
                          <span>User Requests</span>
                        </a>
                      </li>
                      <li class="mb-1 px-2">
                        <a href="/admin/cvGenerator.html" class="flex items-center py-3 px-4 text-blue-100 hover:bg-blue-800 rounded-md transition-all duration-200">
                          <i class="fas fa-file-pdf mr-3"></i>
                          <span>CV Generator</span>
                        </a>
                      </li>
                      <br>
                      <li style="padding-left: 13px; font-size: medium; font-size: 1.1rem;">Account</li>
                    <li class="mb-1 px-2">
                        <a href="/admin/logout"
                            class="flex items-center py-3 px-4 text-blue-100 hover:bg-blue-800 rounded-md transition-all duration-200">
                            <i class="fas fa-sign-out-alt mr-3"></i>
                            <span>Logout</span>
                        </a>
                    </li>
                </ul>
            </nav>
        </aside>

        <!-- Overlay for mobile sidebar -->
        <div id="sidebar-overlay" class="fixed inset-0 bg-black bg-opacity-50 z-30 hidden md:hidden"></div>

        <!-- Main Content -->
        <main class="flex-1 overflow-y-auto">
            <div class="p-4 md:p-6">
                <!-- Header with mobile menu indicator -->
                <div class="flex justify-between items-center mb-6">
                    <div class="flex items-center">
                        <button id="mobile-menu-button" class="mr-3 text-gray-700 md:hidden">
                            <i class="fas fa-bars text-xl"></i>
                        </button>
                        <h1 class="text-xl md:text-2xl font-bold text-gray-800">
                            Dissertation Management
                        </h1>
                    </div>
                    <div class="flex items-center space-x-2 md:space-x-4">
                        <span class="text-gray-700 text-sm md:text-base hidden sm:inline">Welcome, Admin</span>
                        <div
                            class="w-8 h-8 md:w-10 md:h-10 bg-blue-100 rounded-full flex items-center justify-center text-blue-800 font-semibold">
                            A
                        </div>
                    </div>
                </div>

                <!-- Stats Card -->
                <div class="mb-6">
                    <div class="bg-white rounded-lg shadow-md p-4 sm:p-6">
                        <div class="flex flex-wrap items-center justify-between">
                            <div class="flex items-center">
                                <div class="p-3 rounded-full bg-brand-secondary bg-opacity-20 mr-4">
                                    <i class="fas fa-user-graduate text-xl text-brand-secondary"></i>
                                </div>
                                <div>
                                    <h2 class="text-gray-600 text-sm">Total Dissertations</h2>
                                    <p class="text-2xl font-bold text-gray-800" id="dissertationCount">0</p>
                                </div>
                            </div>
                            <div class="flex space-x-3 mt-3 sm:mt-0">
                                <div class="p-2 px-4 bg-blue-50 rounded-lg">
                                    <p class="text-xs font-medium text-blue-500">PhD Awarded</p>
                                    <p class="text-lg font-bold text-blue-600" id="phdCount">0</p>
                                </div>
                                <div class="p-2 px-4 bg-yellow-50 rounded-lg">
                                    <p class="text-xs font-medium text-yellow-600">In Progress</p>
                                    <p class="text-lg font-bold text-yellow-600" id="inProgressCount">0</p>
                                </div>
                                <div class="p-2 px-4 bg-green-50 rounded-lg">
                                    <p class="text-xs font-medium text-green-600">MTech/MSc</p>
                                    <p class="text-lg font-bold text-green-600" id="mtechCount">0</p>
                                </div>
                            </div>
                        </div>
                    </div>
                </div>

                <!-- Dissertation Form -->
                <div class="bg-white shadow-md rounded-lg p-4 sm:p-6 mb-6 sm:mb-8">
                    <h3 class="text-lg font-semibold text-gray-800 mb-4">Add New Dissertation</h3>
                    <form id="dissertationForm" class="grid grid-cols-1 md:grid-cols-2 gap-4">
                        <input type="hidden" id="dissertationId">

                        <div class="flex flex-col">
                            <label class="mb-2 text-gray-700" for="name">Student Name</label>
                            <input type="text" id="name" name="name" required
                                class="border border-gray-300 p-2 rounded focus:outline-none focus:ring-2 focus:ring-brand-primary"
                                placeholder="Full Name">
                        </div>

                        <div class="flex flex-col">
                            <label class="mb-2 text-gray-700" for="title">Dissertation Title</label>
                            <input type="text" id="title" name="title" required
                                class="border border-gray-300 p-2 rounded focus:outline-none focus:ring-2 focus:ring-brand-primary">
                        </div>

                        <div class="flex flex-col">
                            <label class="mb-2 text-gray-700" for="year">Year</label>
                            <input type="number" id="year" name="year" required min="1900" max="2100"
                                class="border border-gray-300 p-2 rounded focus:outline-none focus:ring-2 focus:ring-brand-primary">
                        </div>

                        <div class="flex flex-col">
                            <label class="mb-2 text-gray-700" for="coSupervisors">Co-Supervisors</label>
                            <input type="text" id="coSupervisors" name="coSupervisors"
                                class="border border-gray-300 p-2 rounded focus:outline-none focus:ring-2 focus:ring-brand-primary"
                                placeholder="e.g., Dr. Rajesh Gupta">
                        </div>

                        <div class="flex flex-col">
                            <label class="mb-2 text-gray-700" for="degree">Degree Status</label>
                            <select id="degree" name="degree" required
                                class="border border-gray-300 p-2 rounded focus:outline-none focus:ring-2 focus:ring-brand-primary">
                                <option value="">Select Degree Status</option>
                                <option value="PhD Thesis Awarded">PhD Thesis Awarded</option>
                                <option value="PhD Thesis in progress">PhD Thesis in progress</option>
                                <option value="MTech and MSc Awarded/Ongoing">MTech and MSc Awarded/Ongoing</option>
                            </select>
                        </div>

                        <div class="col-span-1 md:col-span-2 flex space-x-4 mt-2">
                            <button type="submit" id="addButton"
                                class="flex-1 bg-brand-primary text-white p-3 rounded hover:bg-blue-700 transition duration-300">
                                <i class="fas fa-plus mr-2"></i> Add Dissertation
                            </button>
                            <button type="button" id="updateButton"
                                class="flex-1 bg-yellow-500 text-white p-3 rounded hover:bg-yellow-600 transition duration-300 hidden">
                                <i class="fas fa-save mr-2"></i> Update Dissertation
                            </button>
                            <button type="button" id="cancelEditButton"
                                class="flex-1 bg-gray-500 text-white p-3 rounded hover:bg-gray-600 transition duration-300 hidden">
                                <i class="fas fa-times mr-2"></i> Cancel
                            </button>
                        </div>
                    </form>
                </div>

                <!-- Search and Filter Section -->
                <div class="mb-6 bg-white p-4 rounded-lg shadow-md">
                    <h3 class="text-lg font-semibold text-gray-800 mb-4">Search & Filter</h3>
                    <div class="flex flex-wrap gap-4">
                        <div class="flex-grow">
                            <input type="text" id="searchInput" placeholder="Search dissertations..."
                                class="w-full border border-gray-300 p-2 rounded focus:outline-none focus:ring-2 focus:ring-brand-primary">
                        </div>
                        <select id="yearFilter"
                            class="border border-gray-300 p-2 rounded focus:outline-none focus:ring-2 focus:ring-brand-primary">
                            <option value="">All Years</option>
                        </select>
                        <select id="degreeFilter"
                            class="border border-gray-300 p-2 rounded focus:outline-none focus:ring-2 focus:ring-brand-primary">
                            <option value="">All Degrees</option>
                            <option value="PhD Thesis Awarded">PhD Thesis Awarded</option>
                            <option value="PhD Thesis in progress">PhD Thesis in progress</option>
                            <option value="MTech and MSc Awarded/Ongoing">MTech and MSc Awarded/Ongoing</option>
                        </select>
                        <button id="searchButton"
                            class="bg-brand-secondary text-white p-2 rounded hover:bg-blue-700 transition duration-300">
                            <i class="fas fa-search mr-2"></i> Search
                        </button>
                    </div>
                </div>

                <!-- Dissertations Grid -->
                <div id="dissertationsGrid" class="grid grid-cols-1 sm:grid-cols-2 md:grid-cols-3 gap-4 sm:gap-6">
                    <!-- Dissertations will be dynamically added here -->
                </div>

                <!-- Delete Confirmation Modal -->
                <div id="deleteModal"
                    class="fixed inset-0 bg-black bg-opacity-50 z-50 hidden items-center justify-center p-4">
                    <div class="bg-white rounded-lg p-6 max-w-sm w-full">
                        <h2 class="text-xl font-bold mb-4 text-gray-800">Confirm Deletion</h2>
                        <p class="mb-6 text-gray-600">Are you sure you want to delete this dissertation?</p>
                        <div class="flex space-x-4">
                            <button id="confirmDeleteBtn"
                                class="flex-1 bg-red-500 text-white p-3 rounded hover:bg-red-600 transition duration-300">
                                <i class="fas fa-trash mr-2"></i> Delete
                            </button>
                            <button id="cancelDeleteBtn"
                                class="flex-1 bg-gray-500 text-white p-3 rounded hover:bg-gray-600 transition duration-300">
                                <i class="fas fa-times mr-2"></i> Cancel
                            </button>
                        </div>
                    </div>
                </div>
            </div>
        </main>
    </div>

    <!-- Floating action button for mobile -->
    <button id="mobile-fab"
        class="md:hidden fixed bottom-4 right-4 bg-blue-800 text-white w-12 h-12 rounded-full flex items-center justify-center shadow-lg z-30">
        <i class="fas fa-plus"></i>
    </button>

    <script>
        // DOM Elements
        const form = document.getElementById('dissertationForm');
        const dissertationsGrid = document.getElementById('dissertationsGrid');
        const addButton = document.getElementById('addButton');
        const updateButton = document.getElementById('updateButton');
        const cancelEditButton = document.getElementById('cancelEditButton');
        const deleteModal = document.getElementById('deleteModal');
        const confirmDeleteBtn = document.getElementById('confirmDeleteBtn');
        const cancelDeleteBtn = document.getElementById('cancelDeleteBtn');
        const searchInput = document.getElementById('searchInput');
        const yearFilter = document.getElementById('yearFilter');
        const degreeFilter = document.getElementById('degreeFilter');
        const searchButton = document.getElementById('searchButton');
        const dissertationCount = document.getElementById('dissertationCount');
        const phdCount = document.getElementById('phdCount');
        const inProgressCount = document.getElementById('inProgressCount');
        const mtechCount = document.getElementById('mtechCount');

        // Mobile menu elements
        const mobileMenuButton = document.getElementById("mobile-menu-button");
        const closeSidebarButton = document.getElementById("close-sidebar");
        const sidebar = document.getElementById("sidebar");
        const sidebarOverlay = document.getElementById("sidebar-overlay");
        const mobileFab = document.getElementById("mobile-fab");

        let currentDeletingDissertationId = null;
        let dissertations = []; // Store dissertations for filtering

        // Fetch Dissertations
        async function fetchDissertations() {
            try {
                const response = await fetch('/dissertations');
                dissertations = await response.json();
                renderDissertations(dissertations);
                populateYearFilter(dissertations);
                updateStats(dissertations);
            } catch (error) {
                console.error('Error fetching dissertations:', error);
                alert('Failed to fetch dissertations. Please try again.');

                // For demo purposes - populate with sample data if fetch fails
                const sampleData = [
                    {
                        _id: '1',
                        name: "Sanchit Gupta",
                        title: "Optimization of Sustainable Construction Materials for Industrial Applications",
                        year: "2024",
                        coSupervisors: "-",
                        degree: "PhD Thesis Awarded"
                    },
                    {
                        _id: '2',
                        name: "Pooja Jain",
                        title: "Utilization of fine micron size waste of vitrified porcelain stoneware tiles for sustainable and durable concrete",
                        year: "2023",
                        coSupervisors: "Dr. Rajesh Gupta",
                        degree: "PhD Thesis Awarded"
                    },
                    {
                        _id: '3',
                        name: "Rajiv Kumar",
                        title: "Development of Multi-Functional Nanomaterials for Environmental Remediation",
                        year: "2023",
                        coSupervisors: "Dr. Sunita Sharma",
                        degree: "PhD Thesis in progress"
                    },
                    {
                        _id: '4',
                        name: "Aisha Patel",
                        title: "Machine Learning Applications in Structural Health Monitoring",
                        year: "2022",
                        coSupervisors: "-",
                        degree: "MTech and MSc Awarded/Ongoing"
                    },
                    {
                        _id: '5',
                        name: "John Mathews",
                        title: "Novel Approaches to Sustainable Water Treatment Technologies",
                        year: "2022",
                        coSupervisors: "Dr. Sunil Kumar",
                        degree: "PhD Thesis in progress"
                    }
                ];
                dissertations = sampleData;
                renderDissertations(sampleData);
                populateYearFilter(sampleData);
                updateStats(sampleData);
            }
        }

        // Update Statistics
        function updateStats(data) {
            dissertationCount.textContent = data.length;
            phdCount.textContent = data.filter(d => d.degree === "PhD Thesis Awarded").length;
            inProgressCount.textContent = data.filter(d => d.degree === "PhD Thesis in progress").length;
            mtechCount.textContent = data.filter(d => d.degree === "MTech and MSc Awarded/Ongoing").length;
        }

        // Populate Year Filter Dropdown
        function populateYearFilter(data) {
            const years = [...new Set(data.map(item => item.year))].sort((a, b) => b - a);
            yearFilter.innerHTML = '<option value="">All Years</option>';
            years.forEach(year => {
                const option = document.createElement('option');
                option.value = year;
                option.textContent = year;
                yearFilter.appendChild(option);
            });
        }

        // Render Dissertations as Cards
        function renderDissertations(data) {
            dissertationsGrid.innerHTML = data.map(dissertation => {
                // Determine color badge based on degree
                let badgeColor = '';
                if (dissertation.degree === 'PhD Thesis Awarded') {
                    badgeColor = 'bg-green-500';
                } else if (dissertation.degree === 'PhD Thesis in progress') {
                    badgeColor = 'bg-yellow-500';
                } else {
                    badgeColor = 'bg-blue-500';
                }

                return `
                <div class="bg-white shadow-md rounded-lg overflow-hidden transform transition duration-300 hover:scale-105">
                    <div class="p-4">
                        <h3 class="font-bold text-lg mb-2 text-gray-800 line-clamp-2">${escapeHtml(dissertation.title)}</h3>
                        <div class="flex items-center justify-between mb-3">
                            <p class="text-gray-600 text-sm font-medium line-clamp-1">${escapeHtml(dissertation.name)}</p>
                            <span class="text-sm text-gray-500">${dissertation.year}</span>
                        </div>
                        <div class="mb-3">
                            <span class="text-xs px-2 py-1 rounded-full text-white ${badgeColor}">
                                ${dissertation.degree}
                            </span>
                        </div>
                        <div class="mb-3">
                            <p class="text-sm text-gray-500">
                                <span class="font-medium">Co-Supervisors:</span> 
                                ${dissertation.coSupervisors === '-' ? 'None' : escapeHtml(dissertation.coSupervisors)}
                            </p>
                        </div>
                        <div class="mt-4 flex space-x-2">
                            <button 
                                onclick="editDissertation('${dissertation._id}')"
                                class="flex-1 bg-yellow-500 text-white p-2 rounded hover:bg-yellow-600 transition duration-300"
                            >
                                <i class="fas fa-edit mr-1"></i> Edit
                            </button>
                            <button 
                                onclick="confirmDelete('${dissertation._id}')"
                                class="flex-1 bg-red-500 text-white p-2 rounded hover:bg-red-600 transition duration-300"
                            >
                                <i class="fas fa-trash mr-1"></i> Delete
                            </button>
                        </div>
                    </div>
                </div>
            `}).join('');
        }

        // Search and Filter Dissertations
        function searchAndFilterDissertations() {
            const searchTerm = searchInput.value.toLowerCase().trim();
            const selectedYear = yearFilter.value;
            const selectedDegree = degreeFilter.value;

            const filteredDissertations = dissertations.filter(dissertation => {
                const matchesSearch = searchTerm === '' ||
                    dissertation.title.toLowerCase().includes(searchTerm) ||
                    dissertation.name.toLowerCase().includes(searchTerm);

                const matchesYear = selectedYear === '' ||
                    dissertation.year.toString() === selectedYear;

                const matchesDegree = selectedDegree === '' ||
                    dissertation.degree === selectedDegree;

                return matchesSearch && matchesYear && matchesDegree;
            });

            renderDissertations(filteredDissertations);
        }

        // Attach search event listeners
        searchButton.addEventListener('click', searchAndFilterDissertations);
        searchInput.addEventListener('input', searchAndFilterDissertations);
        yearFilter.addEventListener('change', searchAndFilterDissertations);
        degreeFilter.addEventListener('change', searchAndFilterDissertations);

        // Escape HTML to prevent XSS
        function escapeHtml(unsafe) {
            return unsafe
                .replace(/&/g, "&amp;")
                .replace(/</g, "&lt;")
                .replace(/>/g, "&gt;")
                .replace(/"/g, "&quot;")
                .replace(/'/g, "&#039;");
        }

        // Validate Form Inputs
        function validateForm() {
            const name = document.getElementById('name').value.trim();
            const title = document.getElementById('title').value.trim();
            const year = document.getElementById('year').value;
            const degree = document.getElementById('degree').value;

            if (year < 1900 || year > new Date().getFullYear()) {
                alert(`Year must be between 1900 and ${new Date().getFullYear()}`);
                return false;
            }

            if (!degree) {
                alert('Please select a degree status');
                return false;
            }

            return true;
        }

        // Add Dissertation
        form.addEventListener('submit', async (e) => {
            e.preventDefault();

            if (!validateForm()) return;

            const dissertationData = {
                name: document.getElementById('name').value.trim(),
                title: document.getElementById('title').value.trim(),
                year: document.getElementById('year').value,
                coSupervisors: document.getElementById('coSupervisors').value.trim() || '-',
                degree: document.getElementById('degree').value
            };

            try {
                const response = await fetch('/dissertations', {
                    method: 'POST',
                    headers: { 'Content-Type': 'application/json' },
                    body: JSON.stringify(dissertationData)
                });

                if (!response.ok) {
                    const errorData = await response.json();
                    throw new Error(errorData.message || 'Failed to add dissertation');
                }

                await fetchDissertations();
                form.reset();
            } catch (error) {
                console.error('Error adding dissertation:', error);
                alert(error.message);

                // For demo purposes - add to local array if server request fails
                dissertationData._id = (Math.random() * 1000).toString();
                dissertations.push(dissertationData);
                renderDissertations(dissertations);
                populateYearFilter(dissertations);
                updateStats(dissertations);
                form.reset();
            }
        });

        // Edit Dissertation
        async function editDissertation(id) {
            try {
                const response = await fetch(`/dissertations/${id}`);

                if (!response.ok) {
                    throw new Error('Failed to fetch dissertation details');
                }

                const dissertation = await response.json();

                // For demo purposes - find in local array if server request fails
                const dissertationToEdit = dissertations.find(d => d._id === id) || dissertation;

                document.getElementById('name').value = dissertationToEdit.name;
                document.getElementById('title').value = dissertationToEdit.title;
                document.getElementById('year').value = dissertationToEdit.year;
                document.getElementById('coSupervisors').value = dissertationToEdit.coSupervisors === '-' ? '' : dissertationToEdit.coSupervisors;
                document.getElementById('degree').value = dissertationToEdit.degree;
                document.getElementById('dissertationId').value = dissertationToEdit._id;

                addButton.classList.add('hidden');
                updateButton.classList.remove('hidden');
                cancelEditButton.classList.remove('hidden');

                // Scroll to form
                form.scrollIntoView({ behavior: 'smooth' });
            } catch (error) {
                console.error('Error fetching dissertation details:', error);
                alert('Failed to load dissertation details');

                // For demo purposes - find in local array if server request fails
                const dissertationToEdit = dissertations.find(d => d._id === id);
                if (dissertationToEdit) {
                    document.getElementById('name').value = dissertationToEdit.name;
                    document.getElementById('title').value = dissertationToEdit.title;
                    document.getElementById('year').value = dissertationToEdit.year;
                    document.getElementById('coSupervisors').value = dissertationToEdit.coSupervisors === '-' ? '' : dissertationToEdit.coSupervisors;
                    document.getElementById('degree').value = dissertationToEdit.degree;
                    document.getElementById('dissertationId').value = dissertationToEdit._id;

                    addButton.classList.add('hidden');
                    updateButton.classList.remove('hidden');
                    cancelEditButton.classList.remove('hidden');

                    // Scroll to form
                    form.scrollIntoView({ behavior: 'smooth' });
                }
            }
        }

        // Cancel Edit
        cancelEditButton.addEventListener('click', () => {
            form.reset();
            addButton.classList.remove('hidden');
            updateButton.classList.add('hidden');
            cancelEditButton.classList.add('hidden');
        });

        // Update Dissertation
        updateButton.addEventListener('click', async () => {
            if (!validateForm()) return;

            const id = document.getElementById('dissertationId').value;
            const dissertationData = {
                name: document.getElementById('name').value.trim(),
                title: document.getElementById('title').value.trim(),
                year: document.getElementById('year').value,
                coSupervisors: document.getElementById('coSupervisors').value.trim() || '-',
                degree: document.getElementById('degree').value
            };

            try {
                const response = await fetch(`/dissertations/${id}`, {
                    method: 'PUT',
                    headers: { 'Content-Type': 'application/json' },
                    body: JSON.stringify(dissertationData)
                });

                if (!response.ok) {
                    const errorData = await response.json();
                    throw new Error(errorData.message || 'Failed to update dissertation');
                }

                await fetchDissertations();
                form.reset();
                addButton.classList.remove('hidden');
                updateButton.classList.add('hidden');
                cancelEditButton.classList.add('hidden');
            } catch (error) {
                console.error('Error updating dissertation:', error);
                alert(error.message);

                // For demo purposes - update in local array if server request fails
                const index = dissertations.findIndex(d => d._id === id);
                if (index !== -1) {
                    dissertations[index] = { ...dissertationData, _id: id };
                    renderDissertations(dissertations);
                    populateYearFilter(dissertations);
                    form.reset();
                    addButton.classList.remove('hidden');
                    updateButton.classList.add('hidden');
                    cancelEditButton.classList.add('hidden');
                }
            }
        });

        // Confirm Delete
        function confirmDelete(id) {
            currentDeletingDissertationId = id;
            deleteModal.classList.remove('hidden');
            deleteModal.classList.add('flex');
        }

        // Cancel Delete
        cancelDeleteBtn.addEventListener('click', () => {
            deleteModal.classList.add('hidden');
            deleteModal.classList.remove('flex');
            currentDeletingDissertationId = null;
        });

        // Confirm Delete Action
        confirmDeleteBtn.addEventListener('click', async () => {
            if (!currentDeletingDissertationId) return;

            try {
                const response = await fetch(`/dissertations/${currentDeletingDissertationId}`, {
                    method: 'DELETE'
                });

                if (!response.ok) {
                    const errorData = await response.json();
                    throw new Error(errorData.message || 'Failed to delete dissertation');
                }

                await fetchDissertations();
                deleteModal.classList.add('hidden');
                deleteModal.classList.remove('flex');
                currentDeletingDissertationId = null;
            } catch (error) {
                console.error('Error deleting dissertation:', error);
                alert(error.message);

                // For demo purposes - remove from local array if server request fails
                dissertations = dissertations.filter(d => d._id !== currentDeletingDissertationId);
                renderDissertations(dissertations);
                populateYearFilter(dissertations);
                deleteModal.classList.add('hidden');
                deleteModal.classList.remove('flex');
                currentDeletingDissertationId = null;
            }
        });

        // Initial fetch
        fetchDissertations();

        // Mobile sidebar toggle functionality
        mobileMenuButton.addEventListener("click", () => {
            sidebar.classList.remove("-translate-x-full");
            sidebarOverlay.classList.remove("hidden");
        });

        closeSidebarButton.addEventListener("click", () => {
            sidebar.classList.add("-translate-x-full");
            sidebarOverlay.classList.add("hidden");
        });

        sidebarOverlay.addEventListener("click", () => {
            sidebar.classList.add("-translate-x-full");
            sidebarOverlay.classList.add("hidden");
        });

        // Mobile FAB functionality
        mobileFab.addEventListener("click", () => {
            // Scroll to the publication form
            const publicationForm = document.getElementById("publicationForm");
            publicationForm.scrollIntoView({ behavior: "smooth" });
        });
    </script>
</body>

</html>
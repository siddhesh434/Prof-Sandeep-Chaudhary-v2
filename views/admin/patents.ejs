<!DOCTYPE html>
<html lang="en">

<head>
  <meta charset="UTF-8" />
  <meta name="viewport" content="width=device-width, initial-scale=1.0" />
  <title>Patents Management System</title>
  <script src="https://cdn.tailwindcss.com"></script>
  <link href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.0.0-beta3/css/all.min.css" rel="stylesheet" />
  <script>
    tailwind.config = {
      theme: {
        extend: {
          colors: {
            'brand-primary': '#3B82F6',
            'brand-secondary': '#10B981',
          },
        },
      },
    };
  </script>
</head>

<body class="bg-gray-100">
  <div class="flex h-screen overflow-hidden relative">
    <!-- Sidebar - hidden on mobile by default -->
    <aside id="sidebar"
      class="w-64 bg-blue-900 text-white shadow-lg transition-all duration-300 ease-in-out z-40 fixed inset-y-0 left-0 transform -translate-x-full md:translate-x-0 md:relative md:block">
      <div class="p-6 border-b border-blue-800">
        <h2 class="text-xl font-bold tracking-wide">
          Welcome, admin123!
        </h2>
        <!-- Close button for mobile -->
        <button id="close-sidebar" class="absolute top-4 right-4 text-white md:hidden">
          <i class="fas fa-times text-xl"></i>
        </button>
      </div>
      <nav class="mt-4">
        <ul>
          <li class="mb-1 px-2">
            <a href="/admin" class="flex items-center py-3 px-4 bg-blue-700 text-white rounded-md font-medium">
              <i class="fas fa-home mr-3"></i>
              <span>Dashboard</span>
            </a>
          </li>
          <li class="mb-1 px-2">
            <a href="/admin/control.html" class="flex items-center py-3 px-4 text-blue-100 hover:bg-blue-800 rounded-md transition-all duration-200">
              <i class="fas fa-sliders-h mr-3"></i>
              <span>Visibility Controls</span>
            </a>
          </li>
          <li class="mb-1 px-2">
            <a href="/admin/files.html"
              class="flex items-center py-3 px-4 text-blue-100 hover:bg-blue-800 rounded-md transition-all duration-200">
              <i class="fas fa-users mr-3"></i>
              <span>File Upload</span>
            </a>
          </li>
          <li class="mb-1 px-2">
            <a href="/admin/eResources.html"
              class="flex items-center py-3 px-4 text-blue-100 hover:bg-blue-800 rounded-md transition-all duration-200">
              <i class="fas fa-file-alt mr-3"></i>
              <span>e-Resources</span>
            </a>
          </li>
           <li class="mb-1 px-2">
            <a href="/admin/latest_news.html" class="flex items-center py-3 px-4 text-blue-100 hover:bg-blue-800 rounded-md transition-all duration-200">
              <i class="fas fa-edit mr-3"></i>
              <span>Latest News & Scrolling</span>
            </a>
          </li>
          <li class="mb-1 px-2">
            <a href="/admin/formData" class="flex items-center py-3 px-4 text-blue-100 hover:bg-blue-800 rounded-md transition-all duration-200">
              <i class="fas fa-ticket-alt mr-3"></i>
              <span>User Requests</span>
            </a>
          </li>
          <li class="mb-1 px-2">
            <a href="/admin/cvGenerator.html" class="flex items-center py-3 px-4 text-blue-100 hover:bg-blue-800 rounded-md transition-all duration-200">
              <i class="fas fa-file-pdf mr-3"></i>
              <span>CV Generator</span>
            </a>
          </li>
          <br>
          <li style="padding-left: 13px; font-size: medium; font-size: 1.1rem;">Account</li>
          <li class="mb-1 px-2">
            <a href="/admin/logout"
              class="flex items-center py-3 px-4 text-blue-100 hover:bg-blue-800 rounded-md transition-all duration-200">
              <i class="fas fa-sign-out-alt mr-3"></i>
              <span>Logout</span>
            </a>
          </li>
        </ul>
      </nav>
    </aside>

    <!-- Overlay for mobile sidebar -->
    <div id="sidebar-overlay" class="fixed inset-0 bg-black bg-opacity-50 z-30 hidden md:hidden"></div>

    <!-- Main Content -->
    <main class="flex-1 overflow-y-auto">
      <div class="p-4 md:p-6">
        <!-- Header with mobile menu indicator -->
        <div class="flex justify-between items-center mb-6">
          <div class="flex items-center">
            <button id="mobile-menu-button" class="mr-3 text-gray-700 md:hidden">
              <i class="fas fa-bars text-xl"></i>
            </button>
            <h1 class="text-xl md:text-2xl font-bold text-gray-800">
              Patents Management System
            </h1>
          </div>
          <div class="flex items-center space-x-2 md:space-x-4">
            <span class="text-gray-700 text-sm md:text-base hidden sm:inline">Welcome, Admin</span>
            <div
              class="w-8 h-8 md:w-10 md:h-10 bg-blue-100 rounded-full flex items-center justify-center text-blue-800 font-semibold">
              A
            </div>
          </div>
        </div>

        <!-- Stats Card -->
        <div class="mb-6">
          <div class="bg-white rounded-lg shadow-md p-4 sm:p-6">
            <div class="grid grid-cols-1 md:grid-cols-3 gap-4">
              <div class="flex items-center">
                <div class="rounded-full bg-brand-primary bg-opacity-20 p-3 mr-4">
                  <i class="fas fa-file-signature text-brand-primary text-xl"></i>
                </div>
                <div>
                  <h2 class="text-gray-500 text-sm">Total Patents</h2>
                  <p class="text-2xl font-bold text-gray-800" id="totalPatentsCount">0</p>
                </div>
              </div>
              <div class="flex items-center">
                <div class="rounded-full bg-green-100 p-3 mr-4">
                  <i class="fas fa-check-circle text-green-600 text-xl"></i>
                </div>
                <div>
                  <h2 class="text-gray-500 text-sm">Granted Patents</h2>
                  <p class="text-2xl font-bold text-gray-800" id="grantedPatentsCount">0</p>
                </div>
              </div>
              <div class="flex items-center">
                <div class="rounded-full bg-yellow-100 p-3 mr-4">
                  <i class="fas fa-clock text-yellow-600 text-xl"></i>
                </div>
                <div>
                  <h2 class="text-gray-500 text-sm">Pending Patents</h2>
                  <p class="text-2xl font-bold text-gray-800" id="pendingPatentsCount">0</p>
                </div>
              </div>
            </div>
          </div>
        </div>

        <!-- Patent Form -->
        <div class="bg-white shadow-md rounded-lg p-4 sm:p-6 mb-6 sm:mb-8">
          <h2 class="text-xl font-semibold mb-4 text-gray-800 flex items-center">
            <i class="fas fa-edit mr-2 text-brand-primary"></i>
            Add/Edit Patent
          </h2>
          <form id="patentForm" class="grid grid-cols-1 md:grid-cols-2 gap-4">
            <input type="hidden" id="patentId" />

            <div class="flex flex-col">
              <label class="mb-2 text-gray-700" for="title">Patent Title</label>
              <input type="text" id="title" name="title" required
                class="border border-gray-300 p-2 rounded focus:outline-none focus:ring-2 focus:ring-brand-primary" />
            </div>

            <div class="flex flex-col">
              <label class="mb-2 text-gray-700" for="authors">Authors</label>
              <input type="text" id="authors" name="authors" required
                class="border border-gray-300 p-2 rounded focus:outline-none focus:ring-2 focus:ring-brand-primary"
                placeholder="e.g., Smith, J., Kumar, R." />
            </div>

            <div class="flex flex-col">
              <label class="mb-2 text-gray-700" for="year">Filing Year</label>
              <input type="number" id="year" name="year" required min="1900" max="2100"
                class="border border-gray-300 p-2 rounded focus:outline-none focus:ring-2 focus:ring-brand-primary" />
            </div>

            <div class="flex flex-col">
              <label class="mb-2 text-gray-700" for="applicationNumber">Application Number</label>
              <input type="text" id="applicationNumber" name="applicationNumber" required
                class="border border-gray-300 p-2 rounded focus:outline-none focus:ring-2 focus:ring-brand-primary"
                placeholder="e.g., 202011018399 A" />
            </div>

            <div class="flex flex-col">
              <label class="mb-2 text-gray-700" for="grantNumber">Grant Number</label>
              <input type="text" id="grantNumber" name="grantNumber"
                class="border border-gray-300 p-2 rounded focus:outline-none focus:ring-2 focus:ring-brand-primary"
                placeholder="e.g., 385236 (Leave empty if pending)" />
            </div>

            <div class="flex flex-col">
              <label class="mb-2 text-gray-700" for="grantDate">Grant Date</label>
              <input type="text" id="grantDate" name="grantDate"
                class="border border-gray-300 p-2 rounded focus:outline-none focus:ring-2 focus:ring-brand-primary"
                placeholder="e.g., Dec. 27, 2021 (Leave empty if pending)" />
            </div>

            <div class="col-span-1 md:col-span-2 flex flex-col">
              <label class="mb-2 text-gray-700" for="description">Description</label>
              <textarea id="description" name="description" rows="4" required
                class="border border-gray-300 p-2 rounded focus:outline-none focus:ring-2 focus:ring-brand-primary"></textarea>
            </div>

            <div class="col-span-1 md:col-span-2 flex space-x-4">
              <button type="submit" id="addButton"
                class="flex-1 bg-brand-primary text-white p-3 rounded hover:bg-green-700 transition duration-300 flex items-center justify-center">
                <i class="fas fa-plus mr-2"></i> Add Patent
              </button>
              <button type="button" id="updateButton"
                class="flex-1 bg-brand-secondary text-white p-3 rounded hover:bg-blue-600 transition duration-300 hidden flex items-center justify-center">
                <i class="fas fa-save mr-2"></i> Update Patent
              </button>
              <button type="button" id="cancelEditButton"
                class="flex-1 bg-gray-500 text-white p-3 rounded hover:bg-gray-600 transition duration-300 hidden flex items-center justify-center">
                <i class="fas fa-times mr-2"></i> Cancel
              </button>
            </div>
          </form>
        </div>

        <!-- Search and Filter Section -->
        <div class="mb-6 bg-white p-4 rounded-lg shadow-md">
          <h2 class="text-xl font-semibold mb-4 text-gray-800 flex items-center">
            <i class="fas fa-search mr-2 text-brand-secondary"></i>
            Search Patents
          </h2>
          <div class="flex flex-wrap gap-4">
            <input type="text" id="searchInput" placeholder="Search patents by title, authors, or application number..."
              class="flex-grow border border-gray-300 p-2 rounded focus:outline-none focus:ring-2 focus:ring-brand-secondary" />
            <select id="statusFilter"
              class="border border-gray-300 p-2 rounded focus:outline-none focus:ring-2 focus:ring-brand-secondary">
              <option value="">All Patents</option>
              <option value="granted">Granted Patents</option>
              <option value="pending">Pending Patents</option>
            </select>
            <button id="searchButton"
              class="bg-brand-secondary text-white p-2 rounded hover:bg-blue-700 transition duration-300 flex items-center">
              <i class="fas fa-search mr-2"></i> Search
            </button>
          </div>
        </div>

        <!-- Patents Heading -->
        <div class="flex justify-between items-center mb-4">
          <h2 class="text-xl font-semibold text-gray-800 flex items-center">
            <i class="fas fa-file-signature mr-2 text-brand-primary"></i>
            Patent Entries
          </h2>
          <div class="text-sm text-gray-500">
            Showing <span id="displayedPatentsCount">0</span> of <span id="totalPatentsCount2">0</span> patents
          </div>
        </div>

        <!-- Patents Grid -->
        <div id="patentsGrid" class="grid grid-cols-1 sm:grid-cols-2 lg:grid-cols-3 gap-4 sm:gap-6 mb-8">
          <!-- Patents will be dynamically added here -->
        </div>

        <!-- Delete Confirmation Modal -->
        <div id="deleteModal" class="fixed inset-0 bg-black bg-opacity-50 z-50 hidden items-center justify-center p-4">
          <div class="bg-white rounded-lg p-6 max-w-sm w-full">
            <h2 class="text-xl font-bold mb-4 text-gray-800">Confirm Deletion</h2>
            <p class="mb-6 text-gray-600">
              Are you sure you want to delete this patent?
            </p>
            <div class="flex space-x-4">
              <button id="confirmDeleteBtn"
                class="flex-1 bg-red-500 text-white p-3 rounded hover:bg-red-600 transition duration-300 flex items-center justify-center">
                <i class="fas fa-trash-alt mr-2"></i> Delete
              </button>
              <button id="cancelDeleteBtn"
                class="flex-1 bg-gray-500 text-white p-3 rounded hover:bg-gray-600 transition duration-300 flex items-center justify-center">
                <i class="fas fa-times mr-2"></i> Cancel
              </button>
            </div>
          </div>
        </div>

        <!-- View Patent Details Modal -->
        <div id="viewModal" class="fixed inset-0 bg-black bg-opacity-50 z-50 hidden items-center justify-center p-4">
          <div class="bg-white rounded-lg p-6 max-w-3xl w-full max-h-[90vh] overflow-y-auto">
            <div class="flex justify-between items-center mb-4">
              <h2 class="text-xl font-bold text-gray-800" id="viewModalTitle">Patent Details</h2>
              <button id="closeViewBtn" class="text-gray-500 hover:text-gray-700">
                <i class="fas fa-times text-xl"></i>
              </button>
            </div>
            <div id="patentDetails" class="space-y-4">
              <!-- Patent details will be inserted here -->
            </div>
            <div class="mt-6 flex justify-end">
              <button id="closeViewDetailBtn"
                class="bg-gray-500 text-white px-4 py-2 rounded hover:bg-gray-600 transition duration-300 flex items-center">
                <i class="fas fa-times mr-2"></i> Close
              </button>
            </div>
          </div>
        </div>
      </div>
    </main>
  </div>

  <!-- Floating action button for mobile -->
  <button id="mobile-fab"
    class="md:hidden fixed bottom-4 right-4 bg-brand-primary text-white w-12 h-12 rounded-full flex items-center justify-center shadow-lg z-30">
    <i class="fas fa-plus"></i>
  </button>

  <script>

    // DOM Elements
    const form = document.getElementById("patentForm");
    const patentsGrid = document.getElementById("patentsGrid");
    const addButton = document.getElementById("addButton");
    const updateButton = document.getElementById("updateButton");
    const cancelEditButton = document.getElementById("cancelEditButton");
    const deleteModal = document.getElementById("deleteModal");
    const confirmDeleteBtn = document.getElementById("confirmDeleteBtn");
    const cancelDeleteBtn = document.getElementById("cancelDeleteBtn");
    const searchInput = document.getElementById("searchInput");
    const statusFilter = document.getElementById("statusFilter");
    const searchButton = document.getElementById("searchButton");
    const viewModal = document.getElementById("viewModal");
    const closeViewBtn = document.getElementById("closeViewBtn");
    const closeViewDetailBtn = document.getElementById("closeViewDetailBtn");
    const patentDetails = document.getElementById("patentDetails");
    const totalPatentsCount = document.getElementById("totalPatentsCount");
    const totalPatentsCount2 = document.getElementById("totalPatentsCount2");
    const grantedPatentsCount = document.getElementById("grantedPatentsCount");
    const pendingPatentsCount = document.getElementById("pendingPatentsCount");
    const displayedPatentsCount = document.getElementById("displayedPatentsCount");

    const mobileMenuButton = document.getElementById("mobile-menu-button");
    const closeSidebarButton = document.getElementById("close-sidebar");
    const sidebar = document.getElementById("sidebar");
    const sidebarOverlay = document.getElementById("sidebar-overlay");
    const mobileFab = document.getElementById("mobile-fab");

    let currentDeletingPatentId = null;
    let patents = []; // Store patents for filtering

    // Function to open sidebar
    function openSidebar() {
      sidebar.classList.remove("-translate-x-full");
      sidebarOverlay.classList.remove("hidden");
      document.body.classList.add("overflow-hidden");
    }

    // Function to close sidebar
    function closeSidebar() {
      sidebar.classList.add("-translate-x-full");
      sidebarOverlay.classList.add("hidden");
      document.body.classList.remove("overflow-hidden");
    }

    // Event listeners for sidebar
    if (mobileMenuButton) {
      mobileMenuButton.addEventListener("click", openSidebar);
    }

    if (closeSidebarButton) {
      closeSidebarButton.addEventListener("click", closeSidebar);
    }

    if (sidebarOverlay) {
      sidebarOverlay.addEventListener("click", closeSidebar);
    }

    // Optional: Close sidebar when clicking on a menu item on mobile
    const sidebarLinks = sidebar.querySelectorAll("a");
    sidebarLinks.forEach((link) => {
      link.addEventListener("click", () => {
        if (window.innerWidth < 768) {
          // Only on mobile
          closeSidebar();
        }
      });
    });

    // Optional: Toggle floating action button
    if (mobileFab) {
      mobileFab.addEventListener("click", () => {
        // Scroll to the form
        const formSection = document.getElementById("patentForm");
        formSection.scrollIntoView({ behavior: 'smooth' });

        // Focus on the first input
        document.getElementById("title").focus();
      });
    }

    // Update counts
    function updateCounts(allPatents, filteredPatents) {
      const grantedPatents = allPatents.filter(p => p.grantNumber && p.grantNumber.trim() !== '-' && p.grantNumber.trim() !== '');
      const pendingPatents = allPatents.filter(p => !p.grantNumber || p.grantNumber.trim() === '-' || p.grantNumber.trim() === '');

      totalPatentsCount.textContent = allPatents.length;
      totalPatentsCount2.textContent = allPatents.length;
      grantedPatentsCount.textContent = grantedPatents.length;
      pendingPatentsCount.textContent = pendingPatents.length;
      displayedPatentsCount.textContent = filteredPatents.length;
    }

    // Fetch Patents
    async function fetchPatents() {
      try {
        // For a real application, you would uncomment the following:
        const response = await fetch("/patents");
        patents = await response.json();

        renderPatents(patents);
        updateCounts(patents, patents);
      } catch (error) {
        console.error("Error fetching patents:", error);
        // For demo, use sample data on error as well
        patents = samplePatents;
        renderPatents(patents);
        updateCounts(patents, patents);
      }
    }

    // Render Patents as Cards
    function renderPatents(patents) {
      patentsGrid.innerHTML = patents
        .map(
          (patent) => {
            const isGranted = patent.grantNumber && patent.grantNumber.trim() !== '-' && patent.grantNumber.trim() !== '';
            const statusClass = isGranted ? 'bg-green-100 text-green-800' : 'bg-yellow-100 text-yellow-800';
            const statusText = isGranted ? 'Granted' : 'Pending';

            return `
                <div class="bg-white shadow-md rounded-lg overflow-hidden transform transition duration-300 hover:scale-105">
                    <div class="p-4">
                        <h3 class="font-bold text-lg mb-2 text-gray-800 line-clamp-2">${escapeHtml(
              patent.title
            )}</h3>
                        <div class="flex justify-between items-center mb-3">
                            <span class="text-sm text-gray-500">${escapeHtml(
              patent.year.toString()
            )}</span>
                            <span class="text-sm px-2 py-1 rounded-full ${statusClass}">${statusText}</span>
                        </div>
                        <p class="text-gray-600 text-sm mb-2 line-clamp-1"><strong>Authors:</strong> ${escapeHtml(
              patent.authors
            )}</p>
                        <p class="text-gray-600 text-sm mb-2 line-clamp-1"><strong>Application #:</strong> ${escapeHtml(
              patent.applicationNumber
            )}</p>
                        ${isGranted
                ? `<p class="text-gray-600 text-sm mb-2 line-clamp-1"><strong>Grant #:</strong> ${escapeHtml(
                  patent.grantNumber
                )}</p>`
                : ''
              }
                        <div class="mt-4 flex space-x-2">
                            <button 
                                onclick="viewPatent('${patent._id}')"
                                class="flex-1 bg-brand-secondary text-white p-2 rounded hover:bg-blue-700 transition duration-300"
                            >
                                <i class="fas fa-eye mr-1"></i> View
                            </button>
                            <button 
                                onclick="editPatent('${patent._id}')"
                                class="flex-1 bg-yellow-500 text-white p-2 rounded hover:bg-yellow-600 transition duration-300"
                            >
                                <i class="fas fa-edit mr-1"></i> Edit
                            </button>
                            <button 
                                onclick="confirmDelete('${patent._id}')"
                                class="flex-1 bg-red-500 text-white p-2 rounded hover:bg-red-600 transition duration-300"
                            >
                                <i class="fas fa-trash-alt mr-1"></i> Delete
                            </button>
                        </div>
                    </div>
                </div>
              `;
          }
        )
        .join("");

      updateCounts(patents, patents);
    }

    // View Patent Details
    function viewPatent(id) {
      const patent = patents.find((p) => p._id === id);
      if (!patent) return;

      const isGranted = patent.grantNumber && patent.grantNumber.trim() !== '-' && patent.grantNumber.trim() !== '';
      const statusClass = isGranted ? 'bg-green-100 text-green-800' : 'bg-yellow-100 text-yellow-800';
      const statusText = isGranted ? 'Granted' : 'Pending';

      patentDetails.innerHTML = `
          <div class="flex justify-between">
            <h3 class="text-xl font-bold text-gray-800">${escapeHtml(patent.title)}</h3>
            <span class="px-3 py-1 rounded-full ${statusClass}">${statusText}</span>
          </div>
          <div class="grid grid-cols-1 md:grid-cols-2 gap-4 mt-4">
            <div>
              <p class="text-gray-600"><strong>Authors:</strong> ${escapeHtml(patent.authors)}</p>
              <p class="text-gray-600"><strong>Filing Year:</strong> ${escapeHtml(patent.year.toString())}</p>
              <p class="text-gray-600"><strong>Application Number:</strong> ${escapeHtml(patent.applicationNumber)}</p>
            </div>
            <div>
              <p class="text-gray-600"><strong>Grant Number:</strong> ${isGranted ? escapeHtml(patent.grantNumber) : 'Pending'}</p>
              <p class="text-gray-600"><strong>Grant Date:</strong> ${patent.grantDate && patent.grantDate.trim() !== '-' ? escapeHtml(patent.grantDate) : 'Pending'}</p>
            </div>
          </div>
          <div class="mt-4">
            <h4 class="font-bold text-gray-700 mb-2">Description</h4>
            <p class="text-gray-600 whitespace-pre-line">${escapeHtml(patent.description)}</p>
          </div>
        `;

      viewModal.classList.remove("hidden");
      viewModal.classList.add("flex");
    }

    // Close View Modal
    closeViewBtn.addEventListener("click", () => {
      viewModal.classList.add("hidden");
      viewModal.classList.remove("flex");
    });

    closeViewDetailBtn.addEventListener("click", () => {
      viewModal.classList.add("hidden");
      viewModal.classList.remove("flex");
    });

    // Search and Filter Patents
    function searchAndFilterPatents() {
      const searchTerm = searchInput.value.toLowerCase().trim();
      const selectedStatus = statusFilter.value;

      const filteredPatents = patents.filter((pat) => {
        const matchesSearch =
          searchTerm === "" ||
          pat.title.toLowerCase().includes(searchTerm) ||
          pat.authors.toLowerCase().includes(searchTerm) ||
          pat.applicationNumber.toLowerCase().includes(searchTerm) ||
          (pat.grantNumber && pat.grantNumber.toLowerCase().includes(searchTerm));

        let matchesStatus = true;
        if (selectedStatus === "granted") {
          matchesStatus = pat.grantNumber && pat.grantNumber.trim() !== '-' && pat.grantNumber.trim() !== '';
        } else if (selectedStatus === "pending") {
          matchesStatus = !pat.grantNumber || pat.grantNumber.trim() === '-' || pat.grantNumber.trim() === '';
        }

        return matchesSearch && matchesStatus;
      });

      renderPatents(filteredPatents);
    }

    // Attach search event listeners
    searchButton.addEventListener("click", searchAndFilterPatents);
    searchInput.addEventListener("input", searchAndFilterPatents);
    statusFilter.addEventListener("change", searchAndFilterPatents);

    // Escape HTML to prevent XSS
    function escapeHtml(unsafe) {
      if (!unsafe) return '';
      return unsafe
        .toString()
        .replace(/&/g, "&amp;")
        .replace(/</g, "&lt;")
        .replace(/>/g, "&gt;")
        .replace(/"/g, "&quot;")
        .replace(/'/g, "&#039;");
    }

    // Validate Form Inputs
    function validateForm() {
      const title = document.getElementById("title").value.trim();
      const authors = document.getElementById("authors").value.trim();
      const year = document.getElementById("year").value.trim();
      const applicationNumber = document.getElementById("applicationNumber").value.trim();
      const description = document.getElementById("description").value.trim();


      if (!year || isNaN(year) || year < 1900 || year > 2100) {
        alert("Please enter a valid year between 1900 and 2100");
        return false;
      }

      return true;
    }

    // Add Patent
    form.addEventListener("submit", async (e) => {
      e.preventDefault();

      if (!validateForm()) return;

      const patentData = {
        title: document.getElementById("title").value.trim(),
        authors: document.getElementById("authors").value.trim(),
        year: parseInt(document.getElementById("year").value.trim()),
        applicationNumber: document.getElementById("applicationNumber").value.trim(),
        grantNumber: document.getElementById("grantNumber").value.trim(),
        grantDate: document.getElementById("grantDate").value.trim(),
        description: document.getElementById("description").value.trim(),
      };

      try {
        const response = await fetch("/patents", {
          method: "POST",
          headers: { "Content-Type": "application/json" },
          body: JSON.stringify(patentData),
        });

        if (!response.ok) {
          const errorData = await response.json();
          throw new Error(
            errorData.message || "Failed to add patent"
          );
        }

        await fetchPatents();
        form.reset();
      } catch (error) {
        console.error("Error adding patent:", error);
        // For demo, just add to our local array
        const newPatent = {
          _id: Date.now().toString(),
          ...patentData,
        };
        patents.push(newPatent);
        renderPatents(patents);
        form.reset();
      }
    });

    // Edit Patent
    async function editPatent(id) {
      try {
        // For production, fetch from server
        // const response = await fetch(`/patents/${id}`);
        // if (!response.ok) {
        //     throw new Error('Failed to fetch patent details');
        // }
        // const patent = await response.json();

        // For demo, find in our local array
        const patent = patents.find((p) => p._id === id);
        if (!patent) {
          throw new Error("Patent not found");
        }

        document.getElementById("title").value = patent.title;
        document.getElementById("authors").value = patent.authors;
        document.getElementById("year").value = patent.year;
        document.getElementById("applicationNumber").value = patent.applicationNumber;
        document.getElementById("grantNumber").value = patent.grantNumber || '';
        document.getElementById("grantDate").value = patent.grantDate || '';
        document.getElementById("description").value = patent.description;
        document.getElementById("patentId").value = patent._id;

        addButton.classList.add("hidden");
        updateButton.classList.remove("hidden");
        cancelEditButton.classList.remove("hidden");
      } catch (error) {
        console.error("Error fetching patent details:", error);
        alert("Failed to load patent details");
      }
    }

    // Cancel Edit
    cancelEditButton.addEventListener("click", () => {
      form.reset();
      addButton.classList.remove("hidden");
      updateButton.classList.add("hidden");
      cancelEditButton.classList.add("hidden");
    });

    // Update Patent
    updateButton.addEventListener("click", async () => {
      if (!validateForm()) return;

      const id = document.getElementById("patentId").value;
      const patentData = {
        title: document.getElementById("title").value.trim(),
        authors: document.getElementById("authors").value.trim(),
        year: parseInt(document.getElementById("year").value.trim()),
        applicationNumber: document.getElementById("applicationNumber").value.trim(),
        grantNumber: document.getElementById("grantNumber").value.trim(),
        grantDate: document.getElementById("grantDate").value.trim(),
        description: document.getElementById("description").value.trim(),
      };

      try {
        const response = await fetch(`/patents/${id}`, {
          method: "PUT",
          headers: { "Content-Type": "application/json" },
          body: JSON.stringify(patentData),
        });

        if (!response.ok) {
          const errorData = await response.json();
          throw new Error(
            errorData.message || "Failed to update patent"
          );
        }

        await fetchPatents();
        form.reset();
        addButton.classList.remove("hidden");
        updateButton.classList.add("hidden");
        cancelEditButton.classList.add("hidden");
      } catch (error) {
        console.error("Error updating patent:", error);
        // For demo, update in our local array
        const index = patents.findIndex((p) => p._id === id);
        if (index !== -1) {
          patents[index] = { _id: id, ...patentData };
          renderPatents(patents);
          form.reset();
          addButton.classList.remove("hidden");
          updateButton.classList.add("hidden");
          cancelEditButton.classList.add("hidden");
        }
      }
    });

    // Confirm Delete
    function confirmDelete(id) {
      currentDeletingPatentId = id;
      deleteModal.classList.remove("hidden");
      deleteModal.classList.add("flex");
    }

    // Cancel Delete
    cancelDeleteBtn.addEventListener("click", () => {
      deleteModal.classList.add("hidden");
      deleteModal.classList.remove("flex");
      currentDeletingPatentId = null;
    });

    // Confirm Delete Action
    confirmDeleteBtn.addEventListener("click", async () => {
      if (!currentDeletingPatentId) return;

      try {
        const response = await fetch(
          `/patents/${currentDeletingPatentId}`,
          {
            method: "DELETE",
          }
        );

        if (!response.ok) {
          const errorData = await response.json();
          throw new Error(
            errorData.message || "Failed to delete patent"
          );
        }

        await fetchPatents();
        deleteModal.classList.add("hidden");
        deleteModal.classList.remove("flex");
        currentDeletingPatentId = null;
      } catch (error) {
        console.error("Error deleting patent:", error);
        // For demo, remove from our local array
        patents = patents.filter((p) => p._id !== currentDeletingPatentId);
        renderPatents(patents);
        deleteModal.classList.add("hidden");
        deleteModal.classList.remove("flex");
        currentDeletingPatentId = null;
      }
    });

    // Initial fetch
    fetchPatents();
  </script>
</body>

</html>